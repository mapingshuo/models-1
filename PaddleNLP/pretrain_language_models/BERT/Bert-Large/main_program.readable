{ // block 0
    var elementwise_mul_95.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_23_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_114.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_119.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_94.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_116.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_10_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var rsqrt_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_95.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_71.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var softmax_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_125.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var reshape2_94.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_93.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_83.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_38.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_140.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_67.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var fc_140.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_17_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_139.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_138.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_22_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_92.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_137.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_with_cross_entropy_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    var dropout_69.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_136.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_79.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var elementwise_add_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var embedding_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_62.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_136.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_115 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_sub_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_80.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_90.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_114 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_68.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_91.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var softmax_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var tmp_113 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var scale_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_90.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var reshape2_90.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_20.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var transpose_89.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_88.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_134.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_28.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_3_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_19 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_4.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_5.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_4 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_82.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_5 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_0_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var dropout_3.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var dropout_54.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_23 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_38.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_98.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_70.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var transpose_91.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_24.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    persist var encoder_layer_1_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_65.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_63.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_3.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var pre_encoder_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_95.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_88.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_34 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_18_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var elementwise_add_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_74.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_77.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_10_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_4_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_90.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_3_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_3 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_10_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_14_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_44 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_87 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_sub_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var mean_99.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    var dropout_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_8_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var elementwise_mul_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_10_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_3_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_79.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_133.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_22_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var tmp_76 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var scale_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, -1L).astype(VarType.FP32)
    var fc_92.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_25.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    persist var encoder_layer_2_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_add_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var src_ids : fluid.VarType.LOD_TENSOR.shape(-1L, -1L).astype(VarType.INT64)
    var dropout_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_with_cross_entropy_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 2L).astype(VarType.FP32)
    var reshape2_74.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_21_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_1_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_54.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_49.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var rsqrt_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_add_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_69.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_146.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 2L).astype(VarType.FP32)
    var mean_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_17_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var transpose_5.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_10.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_10 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_35.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_69.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_3_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_17 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_21_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_81.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_70.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_2_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    persist var encoder_layer_21_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_120.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mask_label : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.INT64)
    persist var sent_embedding : fluid.VarType.LOD_TENSOR.shape(2L, 1024L).astype(VarType.FP32)
    var fc_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var embedding_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var rsqrt_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_20 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_4_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var mean_96.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_83.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_59.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_94.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_88.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_85.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_106.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var mean_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_19.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_3_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var word_embedding : fluid.VarType.LOD_TENSOR.shape(30522L, 1024L).astype(VarType.FP32)
    var fc_84.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var matmul_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_add_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_1.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_11.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_100.tmp_0 : fluid.VarType.LOD_TENSOR.shape(1L,).astype(VarType.FP32)
    var matmul_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_16.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var matmul_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_40.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_102.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_mul_90.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_1.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var square_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_39.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_9.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_21.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_130.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_52.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var rsqrt_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_add_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_56.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_127.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var rsqrt_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_7 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_66.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_87.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_32.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_33.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var transpose_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_63.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var rsqrt_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_143.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var pre_encoder_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_127.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_130.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var dropout_11.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var tmp_69 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_add_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_112.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_10_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_112.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var dropout_28.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var rsqrt_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_16_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_134.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_10.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_mul_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_65.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_6.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_137.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_18.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_2_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_0_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_6.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_9.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_sub_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_15 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_37 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var scale_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_142.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var mean_61.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_89.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_3.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var mask_lm_out_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(30522L,).astype(VarType.FP32)
    var mean_79.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_98.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_26.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_6_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_8.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_mul_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_4.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_132.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var mean_64.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_15_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var dropout_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var reshape2_75.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_4.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_60.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_39 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_86.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_18.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_4.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    persist var encoder_layer_20_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_118.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_37.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var rsqrt_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_7.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_46 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var accuracy_0.tmp_2 : fluid.VarType.LOD_TENSOR.shape(1L,).astype(VarType.INT32)
    var labels : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.INT64)
    var transpose_41.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_11_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_add_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var slice_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_add_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var softmax_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_16.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_mul_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_1_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_30.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var scale_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_40.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_mul_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_34.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var reshape2_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_72.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var transpose_77.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_108.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_53.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_3_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    persist var encoder_layer_23_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_45.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_40 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_143.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_7_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var reshape2_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_7_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var fc_23.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 30522L).astype(VarType.FP32)
    persist var encoder_layer_7_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_66.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_45 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_7_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var tmp_11 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_29.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_135.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mask_pos : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.INT64)
    var mean_94.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_38.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_63.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_8_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var transpose_10.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var mask_lm_trans_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_53.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_47 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_10_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var elementwise_mul_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_124.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_102.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_sub_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_107.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_95.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_33.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var mask_lm_trans_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_118.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_43 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var mean_66.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var matmul_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_61.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_17_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var rsqrt_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_96.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_17_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var fc_133.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_52.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var softmax_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var square_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_54.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_55 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_81.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_55.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_22_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var reshape2_81.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var top_k_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.INT64)
    var mean_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var matmul_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var square_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_30 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var reshape2_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_56.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var tmp_64 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_35 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_7.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_123 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    var dropout_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_mul_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_55.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_55.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_7_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var fc_105.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_4_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var rsqrt_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_54.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_106.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_15_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_2.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    persist var encoder_layer_10_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_50.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_65.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_51 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_58.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_10_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_mul_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_131.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_42.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_mul_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_14.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_add_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_33 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_sub_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var cast_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.INT32)
    var transpose_34.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_40.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var pooled_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_76.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var matmul_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_13_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var dropout_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_49 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_18 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var reshape2_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_96.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_56 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_63.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_97.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_100.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var reshape2_70.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_7_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var accuracy_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(1L,).astype(VarType.INT32)
    var fc_83.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var matmul_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_sub_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_69.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var rsqrt_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_sub_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_1_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_64.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_8_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_17.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_mul_91.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_121 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var top_k_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    var mean_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_5_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_98.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_12_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var fc_144.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var tmp_52 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_9_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_42 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_65.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_96.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var input_mask : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_46.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_122 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_111 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_73.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_31.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_26.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_sub_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var mean_53.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_72.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var pooled_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_mul_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_145.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var square_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_97.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_6 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_53.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_18.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_49.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_124.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_27 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_30.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_50 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_124 : fluid.VarType.LOD_TENSOR.shape(-1L, 30522L).astype(VarType.FP32)
    persist var next_sent_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(2L,).astype(VarType.FP32)
    var fc_145.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    persist var mask_lm_trans_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_85 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_66.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_mul_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_142.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_23_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var scale_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_sub_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_26.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var rsqrt_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_6_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var matmul_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var reshape2_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_7_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_54 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_68.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_113.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_62.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_72.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_92.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_25 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_112 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_48.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_52.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var scale_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_118 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var square_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_110.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_57.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_37.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_97.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 2L).astype(VarType.FP32)
    var tmp_13 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var mean_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_23_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var next_sent_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 2L).astype(VarType.FP32)
    var dropout_5.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    persist var encoder_layer_4_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_145.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var scale_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_add_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_56.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var softmax_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_125 : fluid.VarType.LOD_TENSOR.shape(1L,).astype(VarType.FP32)
    var tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_22 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var mask_lm_trans_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var softmax_with_cross_entropy_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 30522L).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_28 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_43.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_146.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 2L).astype(VarType.FP32)
    var scale_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_77.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_23_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var square_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var accuracy_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(1L,).astype(VarType.FP32)
    var fc_51.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_16.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var transpose_53.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_47.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var reshape2_55.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_87.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var square_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_110 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_62.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_8_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var scale_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_106.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_59.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_58.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var square_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_70.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_58.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var softmax_with_cross_entropy_1.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_10_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_105 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_144.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_135.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_94.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_sub_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_46.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_mul_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_20.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var reshape2_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_76.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_18_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_add_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_39.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_8_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_27.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var matmul_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_83.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_25.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_0_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var softmax_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var softmax_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_5_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_21_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var tmp_38 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var matmul_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var sent_ids : fluid.VarType.LOD_TENSOR.shape(-1L, -1L).astype(VarType.INT64)
    persist var encoder_layer_23_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_64.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_31 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_83 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var square_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_60.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_add_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var gather_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var fc_89.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_5_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var fc_34.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_5_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_64.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var dropout_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_22.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_144.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_8_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_sub_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_90 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_5_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_29 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_6_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_21.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var matmul_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_80.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_36.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_32.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_8.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_52.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_19_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_57 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_1_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var mean_98.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    var fc_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var mean_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_82.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_8_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var square_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_1_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var reshape2_69.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_48.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var scale_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_88.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var rsqrt_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var scale_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_1_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_2.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var matmul_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_36.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_64.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_add_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_69.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var dropout_14.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_mul_73.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var fc_61.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_17.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_add_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var softmax_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_23.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_sub_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_59.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_59.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_88.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_9_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var reshape2_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_123.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_114.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_82.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var reshape2_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_71.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_51.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var scale_6.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_88.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var mean_71.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_43.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_mul_88.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_119 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_add_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_79 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_14_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var reshape2_61.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_59.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_44.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var tmp_86 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_64.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_6_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_12 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_9_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var dropout_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_23.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_87.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_10.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    persist var encoder_layer_18_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_21 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_15.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_add_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_70.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_76.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var reshape2_64.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_36 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_85.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_77 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_117 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_add_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_37.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_16 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_41.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_18_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_73 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_1_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_3_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_22.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_67.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_12.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_84.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_53 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_52.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_24.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_93 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_3_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_8_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_7_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_13.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_5_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var fc_24.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_mul_71.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_25.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_78.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_8 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_61.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_132.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_17.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_90.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var stack_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_0.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var scale_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_94.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var mean_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_91.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_4.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var rsqrt_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_12_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_27.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_80.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_77.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_30.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_54.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_63.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_117.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_13.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var matmul_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var reshape2_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_20.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_11.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_99 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_sub_9.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var fc_28.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_20_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var reshape2_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_138.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_19.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var matmul_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_15.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    persist var encoder_layer_14_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var fc_46.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_35.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_47.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var tmp_26 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_20_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_35.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_2_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_96.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_12_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var elementwise_add_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_94.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_4_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_7.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var elementwise_sub_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var fc_101.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_1.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_60.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_78.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_19.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    persist var encoder_layer_11_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_66.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_67.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_sub_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_68.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_87.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_44.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_45.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_21_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_12.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_58 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_115.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var fc_139.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_34.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var fc_97.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_76.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var matmul_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var pos_ids : fluid.VarType.LOD_TENSOR.shape(-1L, -1L).astype(VarType.INT64)
    var transpose_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_47.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var reshape2_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_108.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_59 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var mean_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_16_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var tmp_60 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_86.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_69.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_mul_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_70.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_70.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_71.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_74.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var pos_embedding : fluid.VarType.LOD_TENSOR.shape(512L, 1024L).astype(VarType.FP32)
    var fc_71.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_23_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_60.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var mean_86.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_36.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_61 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_13_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var transpose_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_12_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_87.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_130.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_sub_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_68.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_62 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_50.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_97 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_65.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_24 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_11_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_72.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_4_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var dropout_27.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_mul_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1L).astype(VarType.FP32)
    var fc_73.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_73.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_12_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_66.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_53.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_74.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_50.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_mul_99.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    var square_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_50.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var mean_83.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var softmax_16.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var matmul_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var embedding_2.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_63.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_63 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_sub_20.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_12.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_51.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_100 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_51.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_15_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var reshape2_51.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_75.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_75.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_92 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_29.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var mean_50.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_41 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_50.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_12_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_93.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_25.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_120 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_6.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_12_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_116 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_51.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_12_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var fc_86.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_122.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_39.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_mul_93.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_66 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_67.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_84.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_126.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_54.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_112.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_9.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_add_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_93.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_73.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var square_8.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_mul_86.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_31.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_78.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_52.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_102 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_68.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_78.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_95.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_80.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_84 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_101.tmp_0 : fluid.VarType.LOD_TENSOR.shape(1L,).astype(VarType.FP32)
    var reshape2_52.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_67 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var transpose_52.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_52.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_122.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_mul_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_53.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_53.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_82.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_54.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_54.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_69.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_75.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_82 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var matmul_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var tmp_68 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_11_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var softmax_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_40.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var reshape2_58.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var matmul_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_55.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_55.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_mul_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_13_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_111.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_29.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_81.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_41.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var elementwise_sub_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_73.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_55.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_14 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_70 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_92.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_mul_54.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_13_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_mul_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_74.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_79.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_13_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_98 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_mul_55.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_121.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var rsqrt_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_13_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var dropout_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_42.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var tmp_71 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_21_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var mean_56.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_33.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_57.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_56.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_13_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_13_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_88 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_mul_57.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_65.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_50.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_57.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_84.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_43.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var fc_85.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_95.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_85.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_add_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_57.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_57.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_57.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_58.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_58.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var elementwise_sub_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var scale_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var softmax_14.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var matmul_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_59.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_22.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var dropout_44.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var tmp_74 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_91 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_124.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_sub_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_59.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_116.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var tmp_75 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_64.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var rsqrt_29.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_141.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var elementwise_mul_58.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_10_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_59.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_11_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var transpose_56.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_89.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_14.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_14_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_45.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_117.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_60.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_61.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_90.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_51.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_65.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_13_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_91.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_84.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_91.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_56.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var fc_92.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_78 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_75.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_60.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_60.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_28.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_60.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_53.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var transpose_61.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_16.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var reshape2_62.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_5_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_62.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_8.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var transpose_62.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_12_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var matmul_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var softmax_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var mean_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_46.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_46.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var matmul_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_63.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_63.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_92.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_93.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_23_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var fc_93.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_2.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_47.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_62.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_101.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_62.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_119.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_15_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_63.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_94.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_95.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_48.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var matmul_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var tmp_81 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_142.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var square_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_49.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var rsqrt_32.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_15_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_74.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_15_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_9 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_65.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_141.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_96.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_97.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_92.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_106 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_64.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var mean_23.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_66.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_32.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var fc_115.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_129.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_72 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_77.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_49.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var matmul_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_67.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_67.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_99.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_99.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_15.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_50.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var rsqrt_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_66.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_9_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var mean_74.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_94 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_67.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_33.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_85.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_100.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_16_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_100.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_16_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_51.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_51.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var mean_68.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_sub_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_50.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_13.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var rsqrt_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_68.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_16_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var square_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_32 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_80 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_79.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_103.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_109.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_103.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var scale_3.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_104.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_16_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_68.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var elementwise_sub_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_70.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_70.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var softmax_17.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_52.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var transpose_71.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_71.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_17_multi_head_att_output_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var reshape2_7.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_105.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var tmp_89 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_89.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var transpose_22.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_12.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var mean_70.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_85.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_65.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_17_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_88.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var elementwise_add_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_67.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_107.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_72.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_15_multi_head_att_query_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_48 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_17_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_72.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_31.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    persist var encoder_layer_17_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_17_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var reshape2_78.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_36.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_58.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_18_ffn_fc_1.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var rsqrt_0.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_109.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_23_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_65 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_110.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var reshape2_72.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_89.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_72.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_72.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_73.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var fc_24.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var softmax_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var elementwise_mul_80.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_91.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_55.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var transpose_76.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_11_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var matmul_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_75.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_18_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_78.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_3_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_111.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_56.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_95 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var dropout_58.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_22.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_129.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_18_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_37.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var elementwise_mul_75.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_18_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var fc_128.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_113.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_22_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_57.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_136.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_96 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_77.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var rsqrt_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_26.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_18_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_1_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var fc_13.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_57.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var reshape2_76.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_76.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_77.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_22_post_att_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_0_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var softmax_19.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var matmul_18.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_58.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var matmul_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var tmp_103 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var reshape2_82.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_14_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_104.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_123.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_11_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var transpose_79.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_sub_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_68.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_39.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_mul_78.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var fc_21.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_79.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_19_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var fc_118.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_19_ffn_fc_1.w_0 : fluid.VarType.LOD_TENSOR.shape(4096L, 1024L).astype(VarType.FP32)
    var dropout_60.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_101 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_81.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_19_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_add_40.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_48.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_76.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var fc_120.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_121.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_key_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_sub_28.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_value_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var reshape2_5.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var mean_69.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var reshape2_80.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var square_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_80.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var fc_42.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    var transpose_81.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_82.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    var dropout_61.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var transpose_83.tmp_1 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, 16L, -1L, 64L).astype(VarType.FP32)
    var dropout_61.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var elementwise_sub_11.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_31.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_42.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var mean_35.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_82.tmp_2 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var transpose_83.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_20_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_62.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var square_45.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var fc_10.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 4096L).astype(VarType.FP32)
    var tmp_104 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_0_post_ffn_layer_norm_bias : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var mean_82.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var square_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var rsqrt_41.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_20_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    persist var encoder_layer_20_ffn_fc_0.b_0 : fluid.VarType.LOD_TENSOR.shape(4096L,).astype(VarType.FP32)
    var fc_125.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var mean_84.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var tmp_107 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_8_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    persist var encoder_layer_20_post_ffn_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var dropout_59.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_71.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_query_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_126.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 16L, 64L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_key_fc.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 1024L).astype(VarType.FP32)
    var fc_128.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_81.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_84.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var mean_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var fc_56.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_85.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_30.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var reshape2_86.tmp_0 : fluid.VarType.LOD_TENSOR.shape(0L, -1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_86.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var square_1.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_108 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_7_multi_head_att_value_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var softmax_21.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    var dropout_64.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.UINT8)
    var elementwise_sub_38.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var matmul_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    var transpose_87.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var transpose_34.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, 64L).astype(VarType.FP32)
    persist var encoder_layer_21_multi_head_att_output_fc.b_0 : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var transpose_27.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var tmp_109 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    persist var encoder_layer_9_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var rsqrt_43.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    persist var encoder_layer_21_post_att_layer_norm_scale : fluid.VarType.LOD_TENSOR.shape(1024L,).astype(VarType.FP32)
    var elementwise_mul_15.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_87.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_67.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, 16L, -1L, -1L).astype(VarType.FP32)
    persist var encoder_layer_21_ffn_fc_0.w_0 : fluid.VarType.LOD_TENSOR.shape(1024L, 4096L).astype(VarType.FP32)
    var fc_131.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var dropout_66.tmp_1 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.UINT8)
    var mean_93.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1L).astype(VarType.FP32)
    var elementwise_sub_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var square_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_mul_89.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)
    var elementwise_add_44.tmp_0 : fluid.VarType.LOD_TENSOR.shape(-1L, -1L, 1024L).astype(VarType.FP32)

    {Out=[u'embedding_0.tmp_0']} = lookup_table_v2(inputs={Ids=[u'src_ids'], W=[u'word_embedding']}, epmap = [], height_sections = [], is_distributed = False, is_sparse = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], padding_idx = -1, remote_prefetch = False, table_names = [], trainer_id = 0)
    {Out=[u'embedding_1.tmp_0']} = lookup_table_v2(inputs={Ids=[u'pos_ids'], W=[u'pos_embedding']}, epmap = [], height_sections = [], is_distributed = False, is_sparse = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], padding_idx = -1, remote_prefetch = False, table_names = [], trainer_id = 0)
    {Out=[u'embedding_2.tmp_0']} = lookup_table_v2(inputs={Ids=[u'sent_ids'], W=[u'sent_embedding']}, epmap = [], height_sections = [], is_distributed = False, is_sparse = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], padding_idx = -1, remote_prefetch = False, table_names = [], trainer_id = 0)
    {Out=[u'tmp_0']} = elementwise_add(inputs={X=[u'embedding_0.tmp_0'], Y=[u'embedding_1.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'tmp_1']} = elementwise_add(inputs={X=[u'tmp_0'], Y=[u'embedding_2.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_0.tmp_0']} = reduce_mean(inputs={X=[u'tmp_1']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_0.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_1'], Y=[u'mean_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_0.tmp_0']} = square(inputs={X=[u'elementwise_sub_0.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_1.tmp_0']} = reduce_mean(inputs={X=[u'square_0.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_2']} = scale(inputs={ScaleTensor=[], X=[u'mean_1.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_0.tmp_0']} = rsqrt(inputs={X=[u'tmp_2']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_0.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_0.tmp_0'], Y=[u'rsqrt_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_1.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_0.tmp_0'], Y=[u'pre_encoder_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_0.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_1.tmp_0'], Y=[u'pre_encoder_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_0.tmp_1'], Out=[u'dropout_0.tmp_0']} = dropout(inputs={Seed=[], X=[u'elementwise_add_0.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_0.tmp_0']} = matmul(inputs={X=[u'input_mask'], Y=[u'input_mask']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_0.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'matmul_0.tmp_0']}, bias = -1.0, bias_after_scale = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 10000.0)
    {Y=[u'stack_0.tmp_0']} = stack(inputs={X=[u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0', u'scale_0.tmp_0']}, axis = 1, op_device = , op_namescope = /, op_role = 0, op_role_var = [])
    {Out=[u'fc_0.tmp_0']} = mul(inputs={X=[u'dropout_0.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_0.tmp_1']} = elementwise_add(inputs={X=[u'fc_0.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_1.tmp_0']} = mul(inputs={X=[u'dropout_0.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_1.tmp_1']} = elementwise_add(inputs={X=[u'fc_1.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_2.tmp_0']} = mul(inputs={X=[u'dropout_0.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_2.tmp_1']} = elementwise_add(inputs={X=[u'fc_2.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_0.tmp_1'], XShape=[u'reshape2_0.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_0.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_0.tmp_0'], XShape=[u'transpose_0.tmp_1']} = transpose2(inputs={X=[u'fc_0.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_1.tmp_1'], XShape=[u'reshape2_1.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_1.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_1.tmp_0'], XShape=[u'transpose_1.tmp_1']} = transpose2(inputs={X=[u'fc_1.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_2.tmp_1'], XShape=[u'reshape2_2.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_2.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_2.tmp_0'], XShape=[u'transpose_2.tmp_1']} = transpose2(inputs={X=[u'fc_2.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_1.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_0.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_1.tmp_0']} = matmul(inputs={X=[u'scale_1.tmp_0'], Y=[u'transpose_1.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_3']} = elementwise_add(inputs={X=[u'matmul_1.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_0.tmp_0']} = softmax(inputs={X=[u'tmp_3']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_1.tmp_1'], Out=[u'dropout_1.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_0.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_2.tmp_0']} = matmul(inputs={X=[u'dropout_1.tmp_0'], Y=[u'transpose_2.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_3.tmp_0'], XShape=[u'transpose_3.tmp_1']} = transpose2(inputs={X=[u'matmul_2.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_3.tmp_0'], XShape=[u'reshape2_3.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_3.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_3.tmp_0']} = mul(inputs={X=[u'transpose_3.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_3.tmp_1']} = elementwise_add(inputs={X=[u'fc_3.tmp_0'], Y=[u'encoder_layer_0_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_2.tmp_1'], Out=[u'dropout_2.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_3.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_4']} = elementwise_add(inputs={X=[u'dropout_2.tmp_0'], Y=[u'dropout_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_2.tmp_0']} = reduce_mean(inputs={X=[u'tmp_4']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_1.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_4'], Y=[u'mean_2.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_1.tmp_0']} = square(inputs={X=[u'elementwise_sub_1.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_3.tmp_0']} = reduce_mean(inputs={X=[u'square_1.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_5']} = scale(inputs={ScaleTensor=[], X=[u'mean_3.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_1.tmp_0']} = rsqrt(inputs={X=[u'tmp_5']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_2.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_1.tmp_0'], Y=[u'rsqrt_1.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_3.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_2.tmp_0'], Y=[u'encoder_layer_0_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_1.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_3.tmp_0'], Y=[u'encoder_layer_0_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_4.tmp_0']} = mul(inputs={X=[u'elementwise_add_1.tmp_0'], Y=[u'encoder_layer_0_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_4.tmp_1']} = elementwise_add(inputs={X=[u'fc_4.tmp_0'], Y=[u'encoder_layer_0_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_4.tmp_2']} = gelu(inputs={X=[u'fc_4.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_5.tmp_0']} = mul(inputs={X=[u'fc_4.tmp_2'], Y=[u'encoder_layer_0_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_5.tmp_1']} = elementwise_add(inputs={X=[u'fc_5.tmp_0'], Y=[u'encoder_layer_0_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_3.tmp_1'], Out=[u'dropout_3.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_5.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_6']} = elementwise_add(inputs={X=[u'dropout_3.tmp_0'], Y=[u'elementwise_add_1.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_4.tmp_0']} = reduce_mean(inputs={X=[u'tmp_6']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_2.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_6'], Y=[u'mean_4.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_2.tmp_0']} = square(inputs={X=[u'elementwise_sub_2.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_5.tmp_0']} = reduce_mean(inputs={X=[u'square_2.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_7']} = scale(inputs={ScaleTensor=[], X=[u'mean_5.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_2.tmp_0']} = rsqrt(inputs={X=[u'tmp_7']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_4.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_2.tmp_0'], Y=[u'rsqrt_2.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_5.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_4.tmp_0'], Y=[u'encoder_layer_0_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_2.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_5.tmp_0'], Y=[u'encoder_layer_0_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_6.tmp_0']} = mul(inputs={X=[u'elementwise_add_2.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_6.tmp_1']} = elementwise_add(inputs={X=[u'fc_6.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_7.tmp_0']} = mul(inputs={X=[u'elementwise_add_2.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_7.tmp_1']} = elementwise_add(inputs={X=[u'fc_7.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_8.tmp_0']} = mul(inputs={X=[u'elementwise_add_2.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_8.tmp_1']} = elementwise_add(inputs={X=[u'fc_8.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_6.tmp_1'], XShape=[u'reshape2_4.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_6.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_4.tmp_0'], XShape=[u'transpose_4.tmp_1']} = transpose2(inputs={X=[u'fc_6.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_7.tmp_1'], XShape=[u'reshape2_5.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_7.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_5.tmp_0'], XShape=[u'transpose_5.tmp_1']} = transpose2(inputs={X=[u'fc_7.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_8.tmp_1'], XShape=[u'reshape2_6.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_8.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_6.tmp_0'], XShape=[u'transpose_6.tmp_1']} = transpose2(inputs={X=[u'fc_8.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_2.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_4.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_3.tmp_0']} = matmul(inputs={X=[u'scale_2.tmp_0'], Y=[u'transpose_5.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_8']} = elementwise_add(inputs={X=[u'matmul_3.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_1.tmp_0']} = softmax(inputs={X=[u'tmp_8']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_4.tmp_1'], Out=[u'dropout_4.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_1.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_4.tmp_0']} = matmul(inputs={X=[u'dropout_4.tmp_0'], Y=[u'transpose_6.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_7.tmp_0'], XShape=[u'transpose_7.tmp_1']} = transpose2(inputs={X=[u'matmul_4.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_7.tmp_0'], XShape=[u'reshape2_7.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_7.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_9.tmp_0']} = mul(inputs={X=[u'transpose_7.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_9.tmp_1']} = elementwise_add(inputs={X=[u'fc_9.tmp_0'], Y=[u'encoder_layer_1_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_5.tmp_1'], Out=[u'dropout_5.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_9.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_9']} = elementwise_add(inputs={X=[u'dropout_5.tmp_0'], Y=[u'elementwise_add_2.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_6.tmp_0']} = reduce_mean(inputs={X=[u'tmp_9']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_3.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_9'], Y=[u'mean_6.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_3.tmp_0']} = square(inputs={X=[u'elementwise_sub_3.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_7.tmp_0']} = reduce_mean(inputs={X=[u'square_3.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_10']} = scale(inputs={ScaleTensor=[], X=[u'mean_7.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_3.tmp_0']} = rsqrt(inputs={X=[u'tmp_10']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_6.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_3.tmp_0'], Y=[u'rsqrt_3.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_7.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_6.tmp_0'], Y=[u'encoder_layer_1_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_3.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_7.tmp_0'], Y=[u'encoder_layer_1_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_10.tmp_0']} = mul(inputs={X=[u'elementwise_add_3.tmp_0'], Y=[u'encoder_layer_1_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_10.tmp_1']} = elementwise_add(inputs={X=[u'fc_10.tmp_0'], Y=[u'encoder_layer_1_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_10.tmp_2']} = gelu(inputs={X=[u'fc_10.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_11.tmp_0']} = mul(inputs={X=[u'fc_10.tmp_2'], Y=[u'encoder_layer_1_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_11.tmp_1']} = elementwise_add(inputs={X=[u'fc_11.tmp_0'], Y=[u'encoder_layer_1_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_6.tmp_1'], Out=[u'dropout_6.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_11.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_11']} = elementwise_add(inputs={X=[u'dropout_6.tmp_0'], Y=[u'elementwise_add_3.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_8.tmp_0']} = reduce_mean(inputs={X=[u'tmp_11']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_4.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_11'], Y=[u'mean_8.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_4.tmp_0']} = square(inputs={X=[u'elementwise_sub_4.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_9.tmp_0']} = reduce_mean(inputs={X=[u'square_4.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_12']} = scale(inputs={ScaleTensor=[], X=[u'mean_9.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_4.tmp_0']} = rsqrt(inputs={X=[u'tmp_12']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_8.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_4.tmp_0'], Y=[u'rsqrt_4.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_9.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_8.tmp_0'], Y=[u'encoder_layer_1_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_4.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_9.tmp_0'], Y=[u'encoder_layer_1_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_12.tmp_0']} = mul(inputs={X=[u'elementwise_add_4.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_12.tmp_1']} = elementwise_add(inputs={X=[u'fc_12.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_13.tmp_0']} = mul(inputs={X=[u'elementwise_add_4.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_13.tmp_1']} = elementwise_add(inputs={X=[u'fc_13.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_14.tmp_0']} = mul(inputs={X=[u'elementwise_add_4.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_14.tmp_1']} = elementwise_add(inputs={X=[u'fc_14.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_12.tmp_1'], XShape=[u'reshape2_8.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_12.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_8.tmp_0'], XShape=[u'transpose_8.tmp_1']} = transpose2(inputs={X=[u'fc_12.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_13.tmp_1'], XShape=[u'reshape2_9.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_13.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_9.tmp_0'], XShape=[u'transpose_9.tmp_1']} = transpose2(inputs={X=[u'fc_13.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_14.tmp_1'], XShape=[u'reshape2_10.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_14.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_10.tmp_0'], XShape=[u'transpose_10.tmp_1']} = transpose2(inputs={X=[u'fc_14.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_3.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_8.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_5.tmp_0']} = matmul(inputs={X=[u'scale_3.tmp_0'], Y=[u'transpose_9.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_13']} = elementwise_add(inputs={X=[u'matmul_5.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_2.tmp_0']} = softmax(inputs={X=[u'tmp_13']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_7.tmp_1'], Out=[u'dropout_7.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_2.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_6.tmp_0']} = matmul(inputs={X=[u'dropout_7.tmp_0'], Y=[u'transpose_10.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_11.tmp_0'], XShape=[u'transpose_11.tmp_1']} = transpose2(inputs={X=[u'matmul_6.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_11.tmp_0'], XShape=[u'reshape2_11.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_11.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_15.tmp_0']} = mul(inputs={X=[u'transpose_11.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_15.tmp_1']} = elementwise_add(inputs={X=[u'fc_15.tmp_0'], Y=[u'encoder_layer_2_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_8.tmp_1'], Out=[u'dropout_8.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_15.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_14']} = elementwise_add(inputs={X=[u'dropout_8.tmp_0'], Y=[u'elementwise_add_4.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_10.tmp_0']} = reduce_mean(inputs={X=[u'tmp_14']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_5.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_14'], Y=[u'mean_10.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_5.tmp_0']} = square(inputs={X=[u'elementwise_sub_5.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_11.tmp_0']} = reduce_mean(inputs={X=[u'square_5.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_15']} = scale(inputs={ScaleTensor=[], X=[u'mean_11.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_5.tmp_0']} = rsqrt(inputs={X=[u'tmp_15']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_10.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_5.tmp_0'], Y=[u'rsqrt_5.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_11.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_10.tmp_0'], Y=[u'encoder_layer_2_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_5.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_11.tmp_0'], Y=[u'encoder_layer_2_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_16.tmp_0']} = mul(inputs={X=[u'elementwise_add_5.tmp_0'], Y=[u'encoder_layer_2_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_16.tmp_1']} = elementwise_add(inputs={X=[u'fc_16.tmp_0'], Y=[u'encoder_layer_2_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_16.tmp_2']} = gelu(inputs={X=[u'fc_16.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_17.tmp_0']} = mul(inputs={X=[u'fc_16.tmp_2'], Y=[u'encoder_layer_2_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_17.tmp_1']} = elementwise_add(inputs={X=[u'fc_17.tmp_0'], Y=[u'encoder_layer_2_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_9.tmp_1'], Out=[u'dropout_9.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_17.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_16']} = elementwise_add(inputs={X=[u'dropout_9.tmp_0'], Y=[u'elementwise_add_5.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_12.tmp_0']} = reduce_mean(inputs={X=[u'tmp_16']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_6.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_16'], Y=[u'mean_12.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_6.tmp_0']} = square(inputs={X=[u'elementwise_sub_6.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_13.tmp_0']} = reduce_mean(inputs={X=[u'square_6.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_17']} = scale(inputs={ScaleTensor=[], X=[u'mean_13.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_6.tmp_0']} = rsqrt(inputs={X=[u'tmp_17']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_12.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_6.tmp_0'], Y=[u'rsqrt_6.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_13.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_12.tmp_0'], Y=[u'encoder_layer_2_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_6.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_13.tmp_0'], Y=[u'encoder_layer_2_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_18.tmp_0']} = mul(inputs={X=[u'elementwise_add_6.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_18.tmp_1']} = elementwise_add(inputs={X=[u'fc_18.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_19.tmp_0']} = mul(inputs={X=[u'elementwise_add_6.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_19.tmp_1']} = elementwise_add(inputs={X=[u'fc_19.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_20.tmp_0']} = mul(inputs={X=[u'elementwise_add_6.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_20.tmp_1']} = elementwise_add(inputs={X=[u'fc_20.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_18.tmp_1'], XShape=[u'reshape2_12.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_18.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_12.tmp_0'], XShape=[u'transpose_12.tmp_1']} = transpose2(inputs={X=[u'fc_18.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_19.tmp_1'], XShape=[u'reshape2_13.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_19.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_13.tmp_0'], XShape=[u'transpose_13.tmp_1']} = transpose2(inputs={X=[u'fc_19.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_20.tmp_1'], XShape=[u'reshape2_14.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_20.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_14.tmp_0'], XShape=[u'transpose_14.tmp_1']} = transpose2(inputs={X=[u'fc_20.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_4.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_12.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_7.tmp_0']} = matmul(inputs={X=[u'scale_4.tmp_0'], Y=[u'transpose_13.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_18']} = elementwise_add(inputs={X=[u'matmul_7.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_3.tmp_0']} = softmax(inputs={X=[u'tmp_18']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_10.tmp_1'], Out=[u'dropout_10.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_3.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_8.tmp_0']} = matmul(inputs={X=[u'dropout_10.tmp_0'], Y=[u'transpose_14.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_15.tmp_0'], XShape=[u'transpose_15.tmp_1']} = transpose2(inputs={X=[u'matmul_8.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_15.tmp_0'], XShape=[u'reshape2_15.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_15.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_21.tmp_0']} = mul(inputs={X=[u'transpose_15.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_21.tmp_1']} = elementwise_add(inputs={X=[u'fc_21.tmp_0'], Y=[u'encoder_layer_3_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_11.tmp_1'], Out=[u'dropout_11.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_21.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_19']} = elementwise_add(inputs={X=[u'dropout_11.tmp_0'], Y=[u'elementwise_add_6.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_14.tmp_0']} = reduce_mean(inputs={X=[u'tmp_19']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_7.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_19'], Y=[u'mean_14.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_7.tmp_0']} = square(inputs={X=[u'elementwise_sub_7.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_15.tmp_0']} = reduce_mean(inputs={X=[u'square_7.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_20']} = scale(inputs={ScaleTensor=[], X=[u'mean_15.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_7.tmp_0']} = rsqrt(inputs={X=[u'tmp_20']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_14.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_7.tmp_0'], Y=[u'rsqrt_7.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_15.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_14.tmp_0'], Y=[u'encoder_layer_3_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_7.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_15.tmp_0'], Y=[u'encoder_layer_3_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_22.tmp_0']} = mul(inputs={X=[u'elementwise_add_7.tmp_0'], Y=[u'encoder_layer_3_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_22.tmp_1']} = elementwise_add(inputs={X=[u'fc_22.tmp_0'], Y=[u'encoder_layer_3_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_22.tmp_2']} = gelu(inputs={X=[u'fc_22.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_23.tmp_0']} = mul(inputs={X=[u'fc_22.tmp_2'], Y=[u'encoder_layer_3_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_23.tmp_1']} = elementwise_add(inputs={X=[u'fc_23.tmp_0'], Y=[u'encoder_layer_3_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_12.tmp_1'], Out=[u'dropout_12.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_23.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_21']} = elementwise_add(inputs={X=[u'dropout_12.tmp_0'], Y=[u'elementwise_add_7.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_16.tmp_0']} = reduce_mean(inputs={X=[u'tmp_21']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_8.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_21'], Y=[u'mean_16.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_8.tmp_0']} = square(inputs={X=[u'elementwise_sub_8.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_17.tmp_0']} = reduce_mean(inputs={X=[u'square_8.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_22']} = scale(inputs={ScaleTensor=[], X=[u'mean_17.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_8.tmp_0']} = rsqrt(inputs={X=[u'tmp_22']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_16.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_8.tmp_0'], Y=[u'rsqrt_8.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_17.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_16.tmp_0'], Y=[u'encoder_layer_3_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_8.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_17.tmp_0'], Y=[u'encoder_layer_3_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_24.tmp_0']} = mul(inputs={X=[u'elementwise_add_8.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_24.tmp_1']} = elementwise_add(inputs={X=[u'fc_24.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_25.tmp_0']} = mul(inputs={X=[u'elementwise_add_8.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_25.tmp_1']} = elementwise_add(inputs={X=[u'fc_25.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_26.tmp_0']} = mul(inputs={X=[u'elementwise_add_8.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_26.tmp_1']} = elementwise_add(inputs={X=[u'fc_26.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_24.tmp_1'], XShape=[u'reshape2_16.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_24.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_16.tmp_0'], XShape=[u'transpose_16.tmp_1']} = transpose2(inputs={X=[u'fc_24.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_25.tmp_1'], XShape=[u'reshape2_17.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_25.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_17.tmp_0'], XShape=[u'transpose_17.tmp_1']} = transpose2(inputs={X=[u'fc_25.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_26.tmp_1'], XShape=[u'reshape2_18.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_26.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_18.tmp_0'], XShape=[u'transpose_18.tmp_1']} = transpose2(inputs={X=[u'fc_26.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_5.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_16.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_9.tmp_0']} = matmul(inputs={X=[u'scale_5.tmp_0'], Y=[u'transpose_17.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_23']} = elementwise_add(inputs={X=[u'matmul_9.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_4.tmp_0']} = softmax(inputs={X=[u'tmp_23']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_13.tmp_1'], Out=[u'dropout_13.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_4.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_10.tmp_0']} = matmul(inputs={X=[u'dropout_13.tmp_0'], Y=[u'transpose_18.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_19.tmp_0'], XShape=[u'transpose_19.tmp_1']} = transpose2(inputs={X=[u'matmul_10.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_19.tmp_0'], XShape=[u'reshape2_19.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_19.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_27.tmp_0']} = mul(inputs={X=[u'transpose_19.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_27.tmp_1']} = elementwise_add(inputs={X=[u'fc_27.tmp_0'], Y=[u'encoder_layer_4_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_14.tmp_1'], Out=[u'dropout_14.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_27.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_24']} = elementwise_add(inputs={X=[u'dropout_14.tmp_0'], Y=[u'elementwise_add_8.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_18.tmp_0']} = reduce_mean(inputs={X=[u'tmp_24']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_9.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_24'], Y=[u'mean_18.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_9.tmp_0']} = square(inputs={X=[u'elementwise_sub_9.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_19.tmp_0']} = reduce_mean(inputs={X=[u'square_9.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_25']} = scale(inputs={ScaleTensor=[], X=[u'mean_19.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_9.tmp_0']} = rsqrt(inputs={X=[u'tmp_25']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_18.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_9.tmp_0'], Y=[u'rsqrt_9.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_19.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_18.tmp_0'], Y=[u'encoder_layer_4_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_9.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_19.tmp_0'], Y=[u'encoder_layer_4_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_28.tmp_0']} = mul(inputs={X=[u'elementwise_add_9.tmp_0'], Y=[u'encoder_layer_4_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_28.tmp_1']} = elementwise_add(inputs={X=[u'fc_28.tmp_0'], Y=[u'encoder_layer_4_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_28.tmp_2']} = gelu(inputs={X=[u'fc_28.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_29.tmp_0']} = mul(inputs={X=[u'fc_28.tmp_2'], Y=[u'encoder_layer_4_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_29.tmp_1']} = elementwise_add(inputs={X=[u'fc_29.tmp_0'], Y=[u'encoder_layer_4_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_15.tmp_1'], Out=[u'dropout_15.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_29.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_26']} = elementwise_add(inputs={X=[u'dropout_15.tmp_0'], Y=[u'elementwise_add_9.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_20.tmp_0']} = reduce_mean(inputs={X=[u'tmp_26']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_10.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_26'], Y=[u'mean_20.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_10.tmp_0']} = square(inputs={X=[u'elementwise_sub_10.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_21.tmp_0']} = reduce_mean(inputs={X=[u'square_10.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_27']} = scale(inputs={ScaleTensor=[], X=[u'mean_21.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_10.tmp_0']} = rsqrt(inputs={X=[u'tmp_27']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_20.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_10.tmp_0'], Y=[u'rsqrt_10.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_21.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_20.tmp_0'], Y=[u'encoder_layer_4_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_10.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_21.tmp_0'], Y=[u'encoder_layer_4_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_30.tmp_0']} = mul(inputs={X=[u'elementwise_add_10.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_30.tmp_1']} = elementwise_add(inputs={X=[u'fc_30.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_31.tmp_0']} = mul(inputs={X=[u'elementwise_add_10.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_31.tmp_1']} = elementwise_add(inputs={X=[u'fc_31.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_32.tmp_0']} = mul(inputs={X=[u'elementwise_add_10.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_32.tmp_1']} = elementwise_add(inputs={X=[u'fc_32.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_30.tmp_1'], XShape=[u'reshape2_20.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_30.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_20.tmp_0'], XShape=[u'transpose_20.tmp_1']} = transpose2(inputs={X=[u'fc_30.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_31.tmp_1'], XShape=[u'reshape2_21.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_31.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_21.tmp_0'], XShape=[u'transpose_21.tmp_1']} = transpose2(inputs={X=[u'fc_31.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_32.tmp_1'], XShape=[u'reshape2_22.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_32.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_22.tmp_0'], XShape=[u'transpose_22.tmp_1']} = transpose2(inputs={X=[u'fc_32.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_6.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_20.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_11.tmp_0']} = matmul(inputs={X=[u'scale_6.tmp_0'], Y=[u'transpose_21.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_28']} = elementwise_add(inputs={X=[u'matmul_11.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_5.tmp_0']} = softmax(inputs={X=[u'tmp_28']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_16.tmp_1'], Out=[u'dropout_16.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_5.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_12.tmp_0']} = matmul(inputs={X=[u'dropout_16.tmp_0'], Y=[u'transpose_22.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_23.tmp_0'], XShape=[u'transpose_23.tmp_1']} = transpose2(inputs={X=[u'matmul_12.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_23.tmp_0'], XShape=[u'reshape2_23.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_23.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_33.tmp_0']} = mul(inputs={X=[u'transpose_23.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_33.tmp_1']} = elementwise_add(inputs={X=[u'fc_33.tmp_0'], Y=[u'encoder_layer_5_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_17.tmp_1'], Out=[u'dropout_17.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_33.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_29']} = elementwise_add(inputs={X=[u'dropout_17.tmp_0'], Y=[u'elementwise_add_10.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_22.tmp_0']} = reduce_mean(inputs={X=[u'tmp_29']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_11.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_29'], Y=[u'mean_22.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_11.tmp_0']} = square(inputs={X=[u'elementwise_sub_11.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_23.tmp_0']} = reduce_mean(inputs={X=[u'square_11.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_30']} = scale(inputs={ScaleTensor=[], X=[u'mean_23.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_11.tmp_0']} = rsqrt(inputs={X=[u'tmp_30']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_22.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_11.tmp_0'], Y=[u'rsqrt_11.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_23.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_22.tmp_0'], Y=[u'encoder_layer_5_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_11.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_23.tmp_0'], Y=[u'encoder_layer_5_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_34.tmp_0']} = mul(inputs={X=[u'elementwise_add_11.tmp_0'], Y=[u'encoder_layer_5_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_34.tmp_1']} = elementwise_add(inputs={X=[u'fc_34.tmp_0'], Y=[u'encoder_layer_5_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_34.tmp_2']} = gelu(inputs={X=[u'fc_34.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_35.tmp_0']} = mul(inputs={X=[u'fc_34.tmp_2'], Y=[u'encoder_layer_5_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_35.tmp_1']} = elementwise_add(inputs={X=[u'fc_35.tmp_0'], Y=[u'encoder_layer_5_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_18.tmp_1'], Out=[u'dropout_18.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_35.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_31']} = elementwise_add(inputs={X=[u'dropout_18.tmp_0'], Y=[u'elementwise_add_11.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_24.tmp_0']} = reduce_mean(inputs={X=[u'tmp_31']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_12.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_31'], Y=[u'mean_24.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_12.tmp_0']} = square(inputs={X=[u'elementwise_sub_12.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_25.tmp_0']} = reduce_mean(inputs={X=[u'square_12.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_32']} = scale(inputs={ScaleTensor=[], X=[u'mean_25.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_12.tmp_0']} = rsqrt(inputs={X=[u'tmp_32']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_24.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_12.tmp_0'], Y=[u'rsqrt_12.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_25.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_24.tmp_0'], Y=[u'encoder_layer_5_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_12.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_25.tmp_0'], Y=[u'encoder_layer_5_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_36.tmp_0']} = mul(inputs={X=[u'elementwise_add_12.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_36.tmp_1']} = elementwise_add(inputs={X=[u'fc_36.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_37.tmp_0']} = mul(inputs={X=[u'elementwise_add_12.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_37.tmp_1']} = elementwise_add(inputs={X=[u'fc_37.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_38.tmp_0']} = mul(inputs={X=[u'elementwise_add_12.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_38.tmp_1']} = elementwise_add(inputs={X=[u'fc_38.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_36.tmp_1'], XShape=[u'reshape2_24.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_36.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_24.tmp_0'], XShape=[u'transpose_24.tmp_1']} = transpose2(inputs={X=[u'fc_36.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_37.tmp_1'], XShape=[u'reshape2_25.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_37.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_25.tmp_0'], XShape=[u'transpose_25.tmp_1']} = transpose2(inputs={X=[u'fc_37.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_38.tmp_1'], XShape=[u'reshape2_26.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_38.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_26.tmp_0'], XShape=[u'transpose_26.tmp_1']} = transpose2(inputs={X=[u'fc_38.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_7.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_24.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_13.tmp_0']} = matmul(inputs={X=[u'scale_7.tmp_0'], Y=[u'transpose_25.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_33']} = elementwise_add(inputs={X=[u'matmul_13.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_6.tmp_0']} = softmax(inputs={X=[u'tmp_33']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_19.tmp_1'], Out=[u'dropout_19.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_6.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_14.tmp_0']} = matmul(inputs={X=[u'dropout_19.tmp_0'], Y=[u'transpose_26.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_27.tmp_0'], XShape=[u'transpose_27.tmp_1']} = transpose2(inputs={X=[u'matmul_14.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_27.tmp_0'], XShape=[u'reshape2_27.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_27.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_39.tmp_0']} = mul(inputs={X=[u'transpose_27.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_39.tmp_1']} = elementwise_add(inputs={X=[u'fc_39.tmp_0'], Y=[u'encoder_layer_6_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_20.tmp_1'], Out=[u'dropout_20.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_39.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_34']} = elementwise_add(inputs={X=[u'dropout_20.tmp_0'], Y=[u'elementwise_add_12.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_26.tmp_0']} = reduce_mean(inputs={X=[u'tmp_34']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_13.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_34'], Y=[u'mean_26.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_13.tmp_0']} = square(inputs={X=[u'elementwise_sub_13.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_27.tmp_0']} = reduce_mean(inputs={X=[u'square_13.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_35']} = scale(inputs={ScaleTensor=[], X=[u'mean_27.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_13.tmp_0']} = rsqrt(inputs={X=[u'tmp_35']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_26.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_13.tmp_0'], Y=[u'rsqrt_13.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_27.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_26.tmp_0'], Y=[u'encoder_layer_6_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_13.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_27.tmp_0'], Y=[u'encoder_layer_6_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_40.tmp_0']} = mul(inputs={X=[u'elementwise_add_13.tmp_0'], Y=[u'encoder_layer_6_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_40.tmp_1']} = elementwise_add(inputs={X=[u'fc_40.tmp_0'], Y=[u'encoder_layer_6_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_40.tmp_2']} = gelu(inputs={X=[u'fc_40.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_41.tmp_0']} = mul(inputs={X=[u'fc_40.tmp_2'], Y=[u'encoder_layer_6_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_41.tmp_1']} = elementwise_add(inputs={X=[u'fc_41.tmp_0'], Y=[u'encoder_layer_6_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_21.tmp_1'], Out=[u'dropout_21.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_41.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_36']} = elementwise_add(inputs={X=[u'dropout_21.tmp_0'], Y=[u'elementwise_add_13.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_28.tmp_0']} = reduce_mean(inputs={X=[u'tmp_36']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_14.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_36'], Y=[u'mean_28.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_14.tmp_0']} = square(inputs={X=[u'elementwise_sub_14.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_29.tmp_0']} = reduce_mean(inputs={X=[u'square_14.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_37']} = scale(inputs={ScaleTensor=[], X=[u'mean_29.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_14.tmp_0']} = rsqrt(inputs={X=[u'tmp_37']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_28.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_14.tmp_0'], Y=[u'rsqrt_14.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_29.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_28.tmp_0'], Y=[u'encoder_layer_6_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_14.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_29.tmp_0'], Y=[u'encoder_layer_6_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_42.tmp_0']} = mul(inputs={X=[u'elementwise_add_14.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_42.tmp_1']} = elementwise_add(inputs={X=[u'fc_42.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_43.tmp_0']} = mul(inputs={X=[u'elementwise_add_14.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_43.tmp_1']} = elementwise_add(inputs={X=[u'fc_43.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_44.tmp_0']} = mul(inputs={X=[u'elementwise_add_14.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_44.tmp_1']} = elementwise_add(inputs={X=[u'fc_44.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_42.tmp_1'], XShape=[u'reshape2_28.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_42.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_28.tmp_0'], XShape=[u'transpose_28.tmp_1']} = transpose2(inputs={X=[u'fc_42.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_43.tmp_1'], XShape=[u'reshape2_29.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_43.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_29.tmp_0'], XShape=[u'transpose_29.tmp_1']} = transpose2(inputs={X=[u'fc_43.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_44.tmp_1'], XShape=[u'reshape2_30.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_44.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_30.tmp_0'], XShape=[u'transpose_30.tmp_1']} = transpose2(inputs={X=[u'fc_44.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_8.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_28.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_15.tmp_0']} = matmul(inputs={X=[u'scale_8.tmp_0'], Y=[u'transpose_29.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_38']} = elementwise_add(inputs={X=[u'matmul_15.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_7.tmp_0']} = softmax(inputs={X=[u'tmp_38']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_22.tmp_1'], Out=[u'dropout_22.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_7.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_16.tmp_0']} = matmul(inputs={X=[u'dropout_22.tmp_0'], Y=[u'transpose_30.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_31.tmp_0'], XShape=[u'transpose_31.tmp_1']} = transpose2(inputs={X=[u'matmul_16.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_31.tmp_0'], XShape=[u'reshape2_31.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_31.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_45.tmp_0']} = mul(inputs={X=[u'transpose_31.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_45.tmp_1']} = elementwise_add(inputs={X=[u'fc_45.tmp_0'], Y=[u'encoder_layer_7_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_23.tmp_1'], Out=[u'dropout_23.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_45.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_39']} = elementwise_add(inputs={X=[u'dropout_23.tmp_0'], Y=[u'elementwise_add_14.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_30.tmp_0']} = reduce_mean(inputs={X=[u'tmp_39']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_15.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_39'], Y=[u'mean_30.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_15.tmp_0']} = square(inputs={X=[u'elementwise_sub_15.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_31.tmp_0']} = reduce_mean(inputs={X=[u'square_15.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_40']} = scale(inputs={ScaleTensor=[], X=[u'mean_31.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_15.tmp_0']} = rsqrt(inputs={X=[u'tmp_40']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_30.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_15.tmp_0'], Y=[u'rsqrt_15.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_31.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_30.tmp_0'], Y=[u'encoder_layer_7_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_15.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_31.tmp_0'], Y=[u'encoder_layer_7_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_46.tmp_0']} = mul(inputs={X=[u'elementwise_add_15.tmp_0'], Y=[u'encoder_layer_7_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_46.tmp_1']} = elementwise_add(inputs={X=[u'fc_46.tmp_0'], Y=[u'encoder_layer_7_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_46.tmp_2']} = gelu(inputs={X=[u'fc_46.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_47.tmp_0']} = mul(inputs={X=[u'fc_46.tmp_2'], Y=[u'encoder_layer_7_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_47.tmp_1']} = elementwise_add(inputs={X=[u'fc_47.tmp_0'], Y=[u'encoder_layer_7_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_24.tmp_1'], Out=[u'dropout_24.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_47.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_41']} = elementwise_add(inputs={X=[u'dropout_24.tmp_0'], Y=[u'elementwise_add_15.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_32.tmp_0']} = reduce_mean(inputs={X=[u'tmp_41']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_16.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_41'], Y=[u'mean_32.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_16.tmp_0']} = square(inputs={X=[u'elementwise_sub_16.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_33.tmp_0']} = reduce_mean(inputs={X=[u'square_16.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_42']} = scale(inputs={ScaleTensor=[], X=[u'mean_33.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_16.tmp_0']} = rsqrt(inputs={X=[u'tmp_42']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_32.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_16.tmp_0'], Y=[u'rsqrt_16.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_33.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_32.tmp_0'], Y=[u'encoder_layer_7_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_16.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_33.tmp_0'], Y=[u'encoder_layer_7_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_48.tmp_0']} = mul(inputs={X=[u'elementwise_add_16.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_48.tmp_1']} = elementwise_add(inputs={X=[u'fc_48.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_49.tmp_0']} = mul(inputs={X=[u'elementwise_add_16.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_49.tmp_1']} = elementwise_add(inputs={X=[u'fc_49.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_50.tmp_0']} = mul(inputs={X=[u'elementwise_add_16.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_50.tmp_1']} = elementwise_add(inputs={X=[u'fc_50.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_48.tmp_1'], XShape=[u'reshape2_32.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_48.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_32.tmp_0'], XShape=[u'transpose_32.tmp_1']} = transpose2(inputs={X=[u'fc_48.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_49.tmp_1'], XShape=[u'reshape2_33.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_49.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_33.tmp_0'], XShape=[u'transpose_33.tmp_1']} = transpose2(inputs={X=[u'fc_49.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_50.tmp_1'], XShape=[u'reshape2_34.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_50.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_34.tmp_0'], XShape=[u'transpose_34.tmp_1']} = transpose2(inputs={X=[u'fc_50.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_9.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_32.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_17.tmp_0']} = matmul(inputs={X=[u'scale_9.tmp_0'], Y=[u'transpose_33.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_43']} = elementwise_add(inputs={X=[u'matmul_17.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_8.tmp_0']} = softmax(inputs={X=[u'tmp_43']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_25.tmp_1'], Out=[u'dropout_25.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_8.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_18.tmp_0']} = matmul(inputs={X=[u'dropout_25.tmp_0'], Y=[u'transpose_34.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_35.tmp_0'], XShape=[u'transpose_35.tmp_1']} = transpose2(inputs={X=[u'matmul_18.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_35.tmp_0'], XShape=[u'reshape2_35.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_35.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_51.tmp_0']} = mul(inputs={X=[u'transpose_35.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_51.tmp_1']} = elementwise_add(inputs={X=[u'fc_51.tmp_0'], Y=[u'encoder_layer_8_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_26.tmp_1'], Out=[u'dropout_26.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_51.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_44']} = elementwise_add(inputs={X=[u'dropout_26.tmp_0'], Y=[u'elementwise_add_16.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_34.tmp_0']} = reduce_mean(inputs={X=[u'tmp_44']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_17.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_44'], Y=[u'mean_34.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_17.tmp_0']} = square(inputs={X=[u'elementwise_sub_17.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_35.tmp_0']} = reduce_mean(inputs={X=[u'square_17.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_45']} = scale(inputs={ScaleTensor=[], X=[u'mean_35.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_17.tmp_0']} = rsqrt(inputs={X=[u'tmp_45']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_34.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_17.tmp_0'], Y=[u'rsqrt_17.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_35.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_34.tmp_0'], Y=[u'encoder_layer_8_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_17.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_35.tmp_0'], Y=[u'encoder_layer_8_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_52.tmp_0']} = mul(inputs={X=[u'elementwise_add_17.tmp_0'], Y=[u'encoder_layer_8_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_52.tmp_1']} = elementwise_add(inputs={X=[u'fc_52.tmp_0'], Y=[u'encoder_layer_8_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_52.tmp_2']} = gelu(inputs={X=[u'fc_52.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_53.tmp_0']} = mul(inputs={X=[u'fc_52.tmp_2'], Y=[u'encoder_layer_8_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_53.tmp_1']} = elementwise_add(inputs={X=[u'fc_53.tmp_0'], Y=[u'encoder_layer_8_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_27.tmp_1'], Out=[u'dropout_27.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_53.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_46']} = elementwise_add(inputs={X=[u'dropout_27.tmp_0'], Y=[u'elementwise_add_17.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_36.tmp_0']} = reduce_mean(inputs={X=[u'tmp_46']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_18.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_46'], Y=[u'mean_36.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_18.tmp_0']} = square(inputs={X=[u'elementwise_sub_18.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_37.tmp_0']} = reduce_mean(inputs={X=[u'square_18.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_47']} = scale(inputs={ScaleTensor=[], X=[u'mean_37.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_18.tmp_0']} = rsqrt(inputs={X=[u'tmp_47']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_36.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_18.tmp_0'], Y=[u'rsqrt_18.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_37.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_36.tmp_0'], Y=[u'encoder_layer_8_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_18.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_37.tmp_0'], Y=[u'encoder_layer_8_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_54.tmp_0']} = mul(inputs={X=[u'elementwise_add_18.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_54.tmp_1']} = elementwise_add(inputs={X=[u'fc_54.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_55.tmp_0']} = mul(inputs={X=[u'elementwise_add_18.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_55.tmp_1']} = elementwise_add(inputs={X=[u'fc_55.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_56.tmp_0']} = mul(inputs={X=[u'elementwise_add_18.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_56.tmp_1']} = elementwise_add(inputs={X=[u'fc_56.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_54.tmp_1'], XShape=[u'reshape2_36.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_54.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_36.tmp_0'], XShape=[u'transpose_36.tmp_1']} = transpose2(inputs={X=[u'fc_54.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_55.tmp_1'], XShape=[u'reshape2_37.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_55.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_37.tmp_0'], XShape=[u'transpose_37.tmp_1']} = transpose2(inputs={X=[u'fc_55.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_56.tmp_1'], XShape=[u'reshape2_38.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_56.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_38.tmp_0'], XShape=[u'transpose_38.tmp_1']} = transpose2(inputs={X=[u'fc_56.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_10.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_36.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_19.tmp_0']} = matmul(inputs={X=[u'scale_10.tmp_0'], Y=[u'transpose_37.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_48']} = elementwise_add(inputs={X=[u'matmul_19.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_9.tmp_0']} = softmax(inputs={X=[u'tmp_48']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_28.tmp_1'], Out=[u'dropout_28.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_9.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_20.tmp_0']} = matmul(inputs={X=[u'dropout_28.tmp_0'], Y=[u'transpose_38.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_39.tmp_0'], XShape=[u'transpose_39.tmp_1']} = transpose2(inputs={X=[u'matmul_20.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_39.tmp_0'], XShape=[u'reshape2_39.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_39.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_57.tmp_0']} = mul(inputs={X=[u'transpose_39.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_57.tmp_1']} = elementwise_add(inputs={X=[u'fc_57.tmp_0'], Y=[u'encoder_layer_9_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_29.tmp_1'], Out=[u'dropout_29.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_57.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_49']} = elementwise_add(inputs={X=[u'dropout_29.tmp_0'], Y=[u'elementwise_add_18.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_38.tmp_0']} = reduce_mean(inputs={X=[u'tmp_49']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_19.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_49'], Y=[u'mean_38.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_19.tmp_0']} = square(inputs={X=[u'elementwise_sub_19.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_39.tmp_0']} = reduce_mean(inputs={X=[u'square_19.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_50']} = scale(inputs={ScaleTensor=[], X=[u'mean_39.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_19.tmp_0']} = rsqrt(inputs={X=[u'tmp_50']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_38.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_19.tmp_0'], Y=[u'rsqrt_19.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_39.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_38.tmp_0'], Y=[u'encoder_layer_9_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_19.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_39.tmp_0'], Y=[u'encoder_layer_9_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_58.tmp_0']} = mul(inputs={X=[u'elementwise_add_19.tmp_0'], Y=[u'encoder_layer_9_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_58.tmp_1']} = elementwise_add(inputs={X=[u'fc_58.tmp_0'], Y=[u'encoder_layer_9_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_58.tmp_2']} = gelu(inputs={X=[u'fc_58.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_59.tmp_0']} = mul(inputs={X=[u'fc_58.tmp_2'], Y=[u'encoder_layer_9_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_59.tmp_1']} = elementwise_add(inputs={X=[u'fc_59.tmp_0'], Y=[u'encoder_layer_9_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_30.tmp_1'], Out=[u'dropout_30.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_59.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_51']} = elementwise_add(inputs={X=[u'dropout_30.tmp_0'], Y=[u'elementwise_add_19.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_40.tmp_0']} = reduce_mean(inputs={X=[u'tmp_51']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_20.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_51'], Y=[u'mean_40.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_20.tmp_0']} = square(inputs={X=[u'elementwise_sub_20.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_41.tmp_0']} = reduce_mean(inputs={X=[u'square_20.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_52']} = scale(inputs={ScaleTensor=[], X=[u'mean_41.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_20.tmp_0']} = rsqrt(inputs={X=[u'tmp_52']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_40.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_20.tmp_0'], Y=[u'rsqrt_20.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_41.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_40.tmp_0'], Y=[u'encoder_layer_9_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_20.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_41.tmp_0'], Y=[u'encoder_layer_9_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_60.tmp_0']} = mul(inputs={X=[u'elementwise_add_20.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_60.tmp_1']} = elementwise_add(inputs={X=[u'fc_60.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_61.tmp_0']} = mul(inputs={X=[u'elementwise_add_20.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_61.tmp_1']} = elementwise_add(inputs={X=[u'fc_61.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_62.tmp_0']} = mul(inputs={X=[u'elementwise_add_20.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_62.tmp_1']} = elementwise_add(inputs={X=[u'fc_62.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_60.tmp_1'], XShape=[u'reshape2_40.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_60.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_40.tmp_0'], XShape=[u'transpose_40.tmp_1']} = transpose2(inputs={X=[u'fc_60.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_61.tmp_1'], XShape=[u'reshape2_41.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_61.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_41.tmp_0'], XShape=[u'transpose_41.tmp_1']} = transpose2(inputs={X=[u'fc_61.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_62.tmp_1'], XShape=[u'reshape2_42.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_62.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_42.tmp_0'], XShape=[u'transpose_42.tmp_1']} = transpose2(inputs={X=[u'fc_62.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_11.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_40.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_21.tmp_0']} = matmul(inputs={X=[u'scale_11.tmp_0'], Y=[u'transpose_41.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_53']} = elementwise_add(inputs={X=[u'matmul_21.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_10.tmp_0']} = softmax(inputs={X=[u'tmp_53']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_31.tmp_1'], Out=[u'dropout_31.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_10.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_22.tmp_0']} = matmul(inputs={X=[u'dropout_31.tmp_0'], Y=[u'transpose_42.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_43.tmp_0'], XShape=[u'transpose_43.tmp_1']} = transpose2(inputs={X=[u'matmul_22.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_43.tmp_0'], XShape=[u'reshape2_43.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_43.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_63.tmp_0']} = mul(inputs={X=[u'transpose_43.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_63.tmp_1']} = elementwise_add(inputs={X=[u'fc_63.tmp_0'], Y=[u'encoder_layer_10_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_32.tmp_1'], Out=[u'dropout_32.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_63.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_54']} = elementwise_add(inputs={X=[u'dropout_32.tmp_0'], Y=[u'elementwise_add_20.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_42.tmp_0']} = reduce_mean(inputs={X=[u'tmp_54']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_21.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_54'], Y=[u'mean_42.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_21.tmp_0']} = square(inputs={X=[u'elementwise_sub_21.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_43.tmp_0']} = reduce_mean(inputs={X=[u'square_21.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_55']} = scale(inputs={ScaleTensor=[], X=[u'mean_43.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_21.tmp_0']} = rsqrt(inputs={X=[u'tmp_55']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_42.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_21.tmp_0'], Y=[u'rsqrt_21.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_43.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_42.tmp_0'], Y=[u'encoder_layer_10_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_21.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_43.tmp_0'], Y=[u'encoder_layer_10_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_64.tmp_0']} = mul(inputs={X=[u'elementwise_add_21.tmp_0'], Y=[u'encoder_layer_10_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_64.tmp_1']} = elementwise_add(inputs={X=[u'fc_64.tmp_0'], Y=[u'encoder_layer_10_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_64.tmp_2']} = gelu(inputs={X=[u'fc_64.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_65.tmp_0']} = mul(inputs={X=[u'fc_64.tmp_2'], Y=[u'encoder_layer_10_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_65.tmp_1']} = elementwise_add(inputs={X=[u'fc_65.tmp_0'], Y=[u'encoder_layer_10_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_33.tmp_1'], Out=[u'dropout_33.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_65.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_56']} = elementwise_add(inputs={X=[u'dropout_33.tmp_0'], Y=[u'elementwise_add_21.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_44.tmp_0']} = reduce_mean(inputs={X=[u'tmp_56']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_22.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_56'], Y=[u'mean_44.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_22.tmp_0']} = square(inputs={X=[u'elementwise_sub_22.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_45.tmp_0']} = reduce_mean(inputs={X=[u'square_22.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_57']} = scale(inputs={ScaleTensor=[], X=[u'mean_45.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_22.tmp_0']} = rsqrt(inputs={X=[u'tmp_57']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_44.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_22.tmp_0'], Y=[u'rsqrt_22.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_45.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_44.tmp_0'], Y=[u'encoder_layer_10_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_22.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_45.tmp_0'], Y=[u'encoder_layer_10_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_66.tmp_0']} = mul(inputs={X=[u'elementwise_add_22.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_66.tmp_1']} = elementwise_add(inputs={X=[u'fc_66.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_67.tmp_0']} = mul(inputs={X=[u'elementwise_add_22.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_67.tmp_1']} = elementwise_add(inputs={X=[u'fc_67.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_68.tmp_0']} = mul(inputs={X=[u'elementwise_add_22.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_68.tmp_1']} = elementwise_add(inputs={X=[u'fc_68.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_66.tmp_1'], XShape=[u'reshape2_44.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_66.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_44.tmp_0'], XShape=[u'transpose_44.tmp_1']} = transpose2(inputs={X=[u'fc_66.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_67.tmp_1'], XShape=[u'reshape2_45.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_67.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_45.tmp_0'], XShape=[u'transpose_45.tmp_1']} = transpose2(inputs={X=[u'fc_67.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_68.tmp_1'], XShape=[u'reshape2_46.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_68.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_46.tmp_0'], XShape=[u'transpose_46.tmp_1']} = transpose2(inputs={X=[u'fc_68.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_12.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_44.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_23.tmp_0']} = matmul(inputs={X=[u'scale_12.tmp_0'], Y=[u'transpose_45.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_58']} = elementwise_add(inputs={X=[u'matmul_23.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_11.tmp_0']} = softmax(inputs={X=[u'tmp_58']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_34.tmp_1'], Out=[u'dropout_34.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_11.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_24.tmp_0']} = matmul(inputs={X=[u'dropout_34.tmp_0'], Y=[u'transpose_46.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_47.tmp_0'], XShape=[u'transpose_47.tmp_1']} = transpose2(inputs={X=[u'matmul_24.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_47.tmp_0'], XShape=[u'reshape2_47.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_47.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_69.tmp_0']} = mul(inputs={X=[u'transpose_47.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_69.tmp_1']} = elementwise_add(inputs={X=[u'fc_69.tmp_0'], Y=[u'encoder_layer_11_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_35.tmp_1'], Out=[u'dropout_35.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_69.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_59']} = elementwise_add(inputs={X=[u'dropout_35.tmp_0'], Y=[u'elementwise_add_22.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_46.tmp_0']} = reduce_mean(inputs={X=[u'tmp_59']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_23.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_59'], Y=[u'mean_46.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_23.tmp_0']} = square(inputs={X=[u'elementwise_sub_23.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_47.tmp_0']} = reduce_mean(inputs={X=[u'square_23.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_60']} = scale(inputs={ScaleTensor=[], X=[u'mean_47.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_23.tmp_0']} = rsqrt(inputs={X=[u'tmp_60']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_46.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_23.tmp_0'], Y=[u'rsqrt_23.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_47.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_46.tmp_0'], Y=[u'encoder_layer_11_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_23.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_47.tmp_0'], Y=[u'encoder_layer_11_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_70.tmp_0']} = mul(inputs={X=[u'elementwise_add_23.tmp_0'], Y=[u'encoder_layer_11_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_70.tmp_1']} = elementwise_add(inputs={X=[u'fc_70.tmp_0'], Y=[u'encoder_layer_11_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_70.tmp_2']} = gelu(inputs={X=[u'fc_70.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_71.tmp_0']} = mul(inputs={X=[u'fc_70.tmp_2'], Y=[u'encoder_layer_11_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_71.tmp_1']} = elementwise_add(inputs={X=[u'fc_71.tmp_0'], Y=[u'encoder_layer_11_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_36.tmp_1'], Out=[u'dropout_36.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_71.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_61']} = elementwise_add(inputs={X=[u'dropout_36.tmp_0'], Y=[u'elementwise_add_23.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_48.tmp_0']} = reduce_mean(inputs={X=[u'tmp_61']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_24.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_61'], Y=[u'mean_48.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_24.tmp_0']} = square(inputs={X=[u'elementwise_sub_24.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_49.tmp_0']} = reduce_mean(inputs={X=[u'square_24.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_62']} = scale(inputs={ScaleTensor=[], X=[u'mean_49.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_24.tmp_0']} = rsqrt(inputs={X=[u'tmp_62']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_48.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_24.tmp_0'], Y=[u'rsqrt_24.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_49.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_48.tmp_0'], Y=[u'encoder_layer_11_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_24.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_49.tmp_0'], Y=[u'encoder_layer_11_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_72.tmp_0']} = mul(inputs={X=[u'elementwise_add_24.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_72.tmp_1']} = elementwise_add(inputs={X=[u'fc_72.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_73.tmp_0']} = mul(inputs={X=[u'elementwise_add_24.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_73.tmp_1']} = elementwise_add(inputs={X=[u'fc_73.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_74.tmp_0']} = mul(inputs={X=[u'elementwise_add_24.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_74.tmp_1']} = elementwise_add(inputs={X=[u'fc_74.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_72.tmp_1'], XShape=[u'reshape2_48.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_72.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_48.tmp_0'], XShape=[u'transpose_48.tmp_1']} = transpose2(inputs={X=[u'fc_72.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_73.tmp_1'], XShape=[u'reshape2_49.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_73.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_49.tmp_0'], XShape=[u'transpose_49.tmp_1']} = transpose2(inputs={X=[u'fc_73.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_74.tmp_1'], XShape=[u'reshape2_50.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_74.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_50.tmp_0'], XShape=[u'transpose_50.tmp_1']} = transpose2(inputs={X=[u'fc_74.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_13.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_48.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_25.tmp_0']} = matmul(inputs={X=[u'scale_13.tmp_0'], Y=[u'transpose_49.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_63']} = elementwise_add(inputs={X=[u'matmul_25.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_12.tmp_0']} = softmax(inputs={X=[u'tmp_63']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_37.tmp_1'], Out=[u'dropout_37.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_12.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_26.tmp_0']} = matmul(inputs={X=[u'dropout_37.tmp_0'], Y=[u'transpose_50.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_51.tmp_0'], XShape=[u'transpose_51.tmp_1']} = transpose2(inputs={X=[u'matmul_26.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_51.tmp_0'], XShape=[u'reshape2_51.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_51.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_75.tmp_0']} = mul(inputs={X=[u'transpose_51.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_75.tmp_1']} = elementwise_add(inputs={X=[u'fc_75.tmp_0'], Y=[u'encoder_layer_12_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_38.tmp_1'], Out=[u'dropout_38.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_75.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_64']} = elementwise_add(inputs={X=[u'dropout_38.tmp_0'], Y=[u'elementwise_add_24.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_50.tmp_0']} = reduce_mean(inputs={X=[u'tmp_64']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_25.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_64'], Y=[u'mean_50.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_25.tmp_0']} = square(inputs={X=[u'elementwise_sub_25.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_51.tmp_0']} = reduce_mean(inputs={X=[u'square_25.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_65']} = scale(inputs={ScaleTensor=[], X=[u'mean_51.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_25.tmp_0']} = rsqrt(inputs={X=[u'tmp_65']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_50.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_25.tmp_0'], Y=[u'rsqrt_25.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_51.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_50.tmp_0'], Y=[u'encoder_layer_12_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_25.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_51.tmp_0'], Y=[u'encoder_layer_12_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_76.tmp_0']} = mul(inputs={X=[u'elementwise_add_25.tmp_0'], Y=[u'encoder_layer_12_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_76.tmp_1']} = elementwise_add(inputs={X=[u'fc_76.tmp_0'], Y=[u'encoder_layer_12_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_76.tmp_2']} = gelu(inputs={X=[u'fc_76.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_77.tmp_0']} = mul(inputs={X=[u'fc_76.tmp_2'], Y=[u'encoder_layer_12_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_77.tmp_1']} = elementwise_add(inputs={X=[u'fc_77.tmp_0'], Y=[u'encoder_layer_12_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_39.tmp_1'], Out=[u'dropout_39.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_77.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_66']} = elementwise_add(inputs={X=[u'dropout_39.tmp_0'], Y=[u'elementwise_add_25.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_52.tmp_0']} = reduce_mean(inputs={X=[u'tmp_66']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_26.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_66'], Y=[u'mean_52.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_26.tmp_0']} = square(inputs={X=[u'elementwise_sub_26.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_53.tmp_0']} = reduce_mean(inputs={X=[u'square_26.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_67']} = scale(inputs={ScaleTensor=[], X=[u'mean_53.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_26.tmp_0']} = rsqrt(inputs={X=[u'tmp_67']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_52.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_26.tmp_0'], Y=[u'rsqrt_26.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_53.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_52.tmp_0'], Y=[u'encoder_layer_12_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_26.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_53.tmp_0'], Y=[u'encoder_layer_12_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_78.tmp_0']} = mul(inputs={X=[u'elementwise_add_26.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_78.tmp_1']} = elementwise_add(inputs={X=[u'fc_78.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_79.tmp_0']} = mul(inputs={X=[u'elementwise_add_26.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_79.tmp_1']} = elementwise_add(inputs={X=[u'fc_79.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_80.tmp_0']} = mul(inputs={X=[u'elementwise_add_26.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_80.tmp_1']} = elementwise_add(inputs={X=[u'fc_80.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_78.tmp_1'], XShape=[u'reshape2_52.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_78.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_52.tmp_0'], XShape=[u'transpose_52.tmp_1']} = transpose2(inputs={X=[u'fc_78.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_79.tmp_1'], XShape=[u'reshape2_53.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_79.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_53.tmp_0'], XShape=[u'transpose_53.tmp_1']} = transpose2(inputs={X=[u'fc_79.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_80.tmp_1'], XShape=[u'reshape2_54.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_80.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_54.tmp_0'], XShape=[u'transpose_54.tmp_1']} = transpose2(inputs={X=[u'fc_80.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_14.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_52.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_27.tmp_0']} = matmul(inputs={X=[u'scale_14.tmp_0'], Y=[u'transpose_53.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_68']} = elementwise_add(inputs={X=[u'matmul_27.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_13.tmp_0']} = softmax(inputs={X=[u'tmp_68']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_40.tmp_1'], Out=[u'dropout_40.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_13.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_28.tmp_0']} = matmul(inputs={X=[u'dropout_40.tmp_0'], Y=[u'transpose_54.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_55.tmp_0'], XShape=[u'transpose_55.tmp_1']} = transpose2(inputs={X=[u'matmul_28.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_55.tmp_0'], XShape=[u'reshape2_55.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_55.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_81.tmp_0']} = mul(inputs={X=[u'transpose_55.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_81.tmp_1']} = elementwise_add(inputs={X=[u'fc_81.tmp_0'], Y=[u'encoder_layer_13_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_41.tmp_1'], Out=[u'dropout_41.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_81.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_69']} = elementwise_add(inputs={X=[u'dropout_41.tmp_0'], Y=[u'elementwise_add_26.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_54.tmp_0']} = reduce_mean(inputs={X=[u'tmp_69']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_27.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_69'], Y=[u'mean_54.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_27.tmp_0']} = square(inputs={X=[u'elementwise_sub_27.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_55.tmp_0']} = reduce_mean(inputs={X=[u'square_27.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_70']} = scale(inputs={ScaleTensor=[], X=[u'mean_55.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_27.tmp_0']} = rsqrt(inputs={X=[u'tmp_70']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_54.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_27.tmp_0'], Y=[u'rsqrt_27.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_55.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_54.tmp_0'], Y=[u'encoder_layer_13_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_27.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_55.tmp_0'], Y=[u'encoder_layer_13_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_82.tmp_0']} = mul(inputs={X=[u'elementwise_add_27.tmp_0'], Y=[u'encoder_layer_13_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_82.tmp_1']} = elementwise_add(inputs={X=[u'fc_82.tmp_0'], Y=[u'encoder_layer_13_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_82.tmp_2']} = gelu(inputs={X=[u'fc_82.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_83.tmp_0']} = mul(inputs={X=[u'fc_82.tmp_2'], Y=[u'encoder_layer_13_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_83.tmp_1']} = elementwise_add(inputs={X=[u'fc_83.tmp_0'], Y=[u'encoder_layer_13_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_42.tmp_1'], Out=[u'dropout_42.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_83.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_71']} = elementwise_add(inputs={X=[u'dropout_42.tmp_0'], Y=[u'elementwise_add_27.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_56.tmp_0']} = reduce_mean(inputs={X=[u'tmp_71']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_28.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_71'], Y=[u'mean_56.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_28.tmp_0']} = square(inputs={X=[u'elementwise_sub_28.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_57.tmp_0']} = reduce_mean(inputs={X=[u'square_28.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_72']} = scale(inputs={ScaleTensor=[], X=[u'mean_57.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_28.tmp_0']} = rsqrt(inputs={X=[u'tmp_72']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_56.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_28.tmp_0'], Y=[u'rsqrt_28.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_57.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_56.tmp_0'], Y=[u'encoder_layer_13_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_28.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_57.tmp_0'], Y=[u'encoder_layer_13_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_84.tmp_0']} = mul(inputs={X=[u'elementwise_add_28.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_84.tmp_1']} = elementwise_add(inputs={X=[u'fc_84.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_85.tmp_0']} = mul(inputs={X=[u'elementwise_add_28.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_85.tmp_1']} = elementwise_add(inputs={X=[u'fc_85.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_86.tmp_0']} = mul(inputs={X=[u'elementwise_add_28.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_86.tmp_1']} = elementwise_add(inputs={X=[u'fc_86.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_84.tmp_1'], XShape=[u'reshape2_56.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_84.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_56.tmp_0'], XShape=[u'transpose_56.tmp_1']} = transpose2(inputs={X=[u'fc_84.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_85.tmp_1'], XShape=[u'reshape2_57.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_85.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_57.tmp_0'], XShape=[u'transpose_57.tmp_1']} = transpose2(inputs={X=[u'fc_85.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_86.tmp_1'], XShape=[u'reshape2_58.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_86.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_58.tmp_0'], XShape=[u'transpose_58.tmp_1']} = transpose2(inputs={X=[u'fc_86.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_15.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_56.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_29.tmp_0']} = matmul(inputs={X=[u'scale_15.tmp_0'], Y=[u'transpose_57.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_73']} = elementwise_add(inputs={X=[u'matmul_29.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_14.tmp_0']} = softmax(inputs={X=[u'tmp_73']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_43.tmp_1'], Out=[u'dropout_43.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_14.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_30.tmp_0']} = matmul(inputs={X=[u'dropout_43.tmp_0'], Y=[u'transpose_58.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_59.tmp_0'], XShape=[u'transpose_59.tmp_1']} = transpose2(inputs={X=[u'matmul_30.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_59.tmp_0'], XShape=[u'reshape2_59.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_59.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_87.tmp_0']} = mul(inputs={X=[u'transpose_59.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_87.tmp_1']} = elementwise_add(inputs={X=[u'fc_87.tmp_0'], Y=[u'encoder_layer_14_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_44.tmp_1'], Out=[u'dropout_44.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_87.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_74']} = elementwise_add(inputs={X=[u'dropout_44.tmp_0'], Y=[u'elementwise_add_28.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_58.tmp_0']} = reduce_mean(inputs={X=[u'tmp_74']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_29.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_74'], Y=[u'mean_58.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_29.tmp_0']} = square(inputs={X=[u'elementwise_sub_29.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_59.tmp_0']} = reduce_mean(inputs={X=[u'square_29.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_75']} = scale(inputs={ScaleTensor=[], X=[u'mean_59.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_29.tmp_0']} = rsqrt(inputs={X=[u'tmp_75']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_58.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_29.tmp_0'], Y=[u'rsqrt_29.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_59.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_58.tmp_0'], Y=[u'encoder_layer_14_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_29.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_59.tmp_0'], Y=[u'encoder_layer_14_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_88.tmp_0']} = mul(inputs={X=[u'elementwise_add_29.tmp_0'], Y=[u'encoder_layer_14_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_88.tmp_1']} = elementwise_add(inputs={X=[u'fc_88.tmp_0'], Y=[u'encoder_layer_14_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_88.tmp_2']} = gelu(inputs={X=[u'fc_88.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_89.tmp_0']} = mul(inputs={X=[u'fc_88.tmp_2'], Y=[u'encoder_layer_14_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_89.tmp_1']} = elementwise_add(inputs={X=[u'fc_89.tmp_0'], Y=[u'encoder_layer_14_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_45.tmp_1'], Out=[u'dropout_45.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_89.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_76']} = elementwise_add(inputs={X=[u'dropout_45.tmp_0'], Y=[u'elementwise_add_29.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_60.tmp_0']} = reduce_mean(inputs={X=[u'tmp_76']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_30.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_76'], Y=[u'mean_60.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_30.tmp_0']} = square(inputs={X=[u'elementwise_sub_30.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_61.tmp_0']} = reduce_mean(inputs={X=[u'square_30.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_77']} = scale(inputs={ScaleTensor=[], X=[u'mean_61.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_30.tmp_0']} = rsqrt(inputs={X=[u'tmp_77']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_60.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_30.tmp_0'], Y=[u'rsqrt_30.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_61.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_60.tmp_0'], Y=[u'encoder_layer_14_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_30.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_61.tmp_0'], Y=[u'encoder_layer_14_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_90.tmp_0']} = mul(inputs={X=[u'elementwise_add_30.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_90.tmp_1']} = elementwise_add(inputs={X=[u'fc_90.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_91.tmp_0']} = mul(inputs={X=[u'elementwise_add_30.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_91.tmp_1']} = elementwise_add(inputs={X=[u'fc_91.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_92.tmp_0']} = mul(inputs={X=[u'elementwise_add_30.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_92.tmp_1']} = elementwise_add(inputs={X=[u'fc_92.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_90.tmp_1'], XShape=[u'reshape2_60.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_90.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_60.tmp_0'], XShape=[u'transpose_60.tmp_1']} = transpose2(inputs={X=[u'fc_90.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_91.tmp_1'], XShape=[u'reshape2_61.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_91.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_61.tmp_0'], XShape=[u'transpose_61.tmp_1']} = transpose2(inputs={X=[u'fc_91.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_92.tmp_1'], XShape=[u'reshape2_62.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_92.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_62.tmp_0'], XShape=[u'transpose_62.tmp_1']} = transpose2(inputs={X=[u'fc_92.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_16.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_60.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_31.tmp_0']} = matmul(inputs={X=[u'scale_16.tmp_0'], Y=[u'transpose_61.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_78']} = elementwise_add(inputs={X=[u'matmul_31.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_15.tmp_0']} = softmax(inputs={X=[u'tmp_78']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_46.tmp_1'], Out=[u'dropout_46.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_15.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_32.tmp_0']} = matmul(inputs={X=[u'dropout_46.tmp_0'], Y=[u'transpose_62.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_63.tmp_0'], XShape=[u'transpose_63.tmp_1']} = transpose2(inputs={X=[u'matmul_32.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_63.tmp_0'], XShape=[u'reshape2_63.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_63.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_93.tmp_0']} = mul(inputs={X=[u'transpose_63.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_93.tmp_1']} = elementwise_add(inputs={X=[u'fc_93.tmp_0'], Y=[u'encoder_layer_15_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_47.tmp_1'], Out=[u'dropout_47.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_93.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_79']} = elementwise_add(inputs={X=[u'dropout_47.tmp_0'], Y=[u'elementwise_add_30.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_62.tmp_0']} = reduce_mean(inputs={X=[u'tmp_79']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_31.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_79'], Y=[u'mean_62.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_31.tmp_0']} = square(inputs={X=[u'elementwise_sub_31.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_63.tmp_0']} = reduce_mean(inputs={X=[u'square_31.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_80']} = scale(inputs={ScaleTensor=[], X=[u'mean_63.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_31.tmp_0']} = rsqrt(inputs={X=[u'tmp_80']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_62.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_31.tmp_0'], Y=[u'rsqrt_31.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_63.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_62.tmp_0'], Y=[u'encoder_layer_15_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_31.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_63.tmp_0'], Y=[u'encoder_layer_15_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_94.tmp_0']} = mul(inputs={X=[u'elementwise_add_31.tmp_0'], Y=[u'encoder_layer_15_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_94.tmp_1']} = elementwise_add(inputs={X=[u'fc_94.tmp_0'], Y=[u'encoder_layer_15_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_94.tmp_2']} = gelu(inputs={X=[u'fc_94.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_95.tmp_0']} = mul(inputs={X=[u'fc_94.tmp_2'], Y=[u'encoder_layer_15_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_95.tmp_1']} = elementwise_add(inputs={X=[u'fc_95.tmp_0'], Y=[u'encoder_layer_15_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_48.tmp_1'], Out=[u'dropout_48.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_95.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_81']} = elementwise_add(inputs={X=[u'dropout_48.tmp_0'], Y=[u'elementwise_add_31.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_64.tmp_0']} = reduce_mean(inputs={X=[u'tmp_81']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_32.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_81'], Y=[u'mean_64.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_32.tmp_0']} = square(inputs={X=[u'elementwise_sub_32.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_65.tmp_0']} = reduce_mean(inputs={X=[u'square_32.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_82']} = scale(inputs={ScaleTensor=[], X=[u'mean_65.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_32.tmp_0']} = rsqrt(inputs={X=[u'tmp_82']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_64.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_32.tmp_0'], Y=[u'rsqrt_32.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_65.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_64.tmp_0'], Y=[u'encoder_layer_15_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_32.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_65.tmp_0'], Y=[u'encoder_layer_15_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_96.tmp_0']} = mul(inputs={X=[u'elementwise_add_32.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_96.tmp_1']} = elementwise_add(inputs={X=[u'fc_96.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_97.tmp_0']} = mul(inputs={X=[u'elementwise_add_32.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_97.tmp_1']} = elementwise_add(inputs={X=[u'fc_97.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_98.tmp_0']} = mul(inputs={X=[u'elementwise_add_32.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_98.tmp_1']} = elementwise_add(inputs={X=[u'fc_98.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_96.tmp_1'], XShape=[u'reshape2_64.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_96.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_64.tmp_0'], XShape=[u'transpose_64.tmp_1']} = transpose2(inputs={X=[u'fc_96.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_97.tmp_1'], XShape=[u'reshape2_65.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_97.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_65.tmp_0'], XShape=[u'transpose_65.tmp_1']} = transpose2(inputs={X=[u'fc_97.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_98.tmp_1'], XShape=[u'reshape2_66.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_98.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_66.tmp_0'], XShape=[u'transpose_66.tmp_1']} = transpose2(inputs={X=[u'fc_98.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_17.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_64.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_33.tmp_0']} = matmul(inputs={X=[u'scale_17.tmp_0'], Y=[u'transpose_65.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_83']} = elementwise_add(inputs={X=[u'matmul_33.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_16.tmp_0']} = softmax(inputs={X=[u'tmp_83']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_49.tmp_1'], Out=[u'dropout_49.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_16.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_34.tmp_0']} = matmul(inputs={X=[u'dropout_49.tmp_0'], Y=[u'transpose_66.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_67.tmp_0'], XShape=[u'transpose_67.tmp_1']} = transpose2(inputs={X=[u'matmul_34.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_67.tmp_0'], XShape=[u'reshape2_67.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_67.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_99.tmp_0']} = mul(inputs={X=[u'transpose_67.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_99.tmp_1']} = elementwise_add(inputs={X=[u'fc_99.tmp_0'], Y=[u'encoder_layer_16_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_50.tmp_1'], Out=[u'dropout_50.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_99.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_84']} = elementwise_add(inputs={X=[u'dropout_50.tmp_0'], Y=[u'elementwise_add_32.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_66.tmp_0']} = reduce_mean(inputs={X=[u'tmp_84']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_33.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_84'], Y=[u'mean_66.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_33.tmp_0']} = square(inputs={X=[u'elementwise_sub_33.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_67.tmp_0']} = reduce_mean(inputs={X=[u'square_33.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_85']} = scale(inputs={ScaleTensor=[], X=[u'mean_67.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_33.tmp_0']} = rsqrt(inputs={X=[u'tmp_85']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_66.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_33.tmp_0'], Y=[u'rsqrt_33.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_67.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_66.tmp_0'], Y=[u'encoder_layer_16_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_33.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_67.tmp_0'], Y=[u'encoder_layer_16_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_100.tmp_0']} = mul(inputs={X=[u'elementwise_add_33.tmp_0'], Y=[u'encoder_layer_16_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_100.tmp_1']} = elementwise_add(inputs={X=[u'fc_100.tmp_0'], Y=[u'encoder_layer_16_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_100.tmp_2']} = gelu(inputs={X=[u'fc_100.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_101.tmp_0']} = mul(inputs={X=[u'fc_100.tmp_2'], Y=[u'encoder_layer_16_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_101.tmp_1']} = elementwise_add(inputs={X=[u'fc_101.tmp_0'], Y=[u'encoder_layer_16_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_51.tmp_1'], Out=[u'dropout_51.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_101.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_86']} = elementwise_add(inputs={X=[u'dropout_51.tmp_0'], Y=[u'elementwise_add_33.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_68.tmp_0']} = reduce_mean(inputs={X=[u'tmp_86']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_34.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_86'], Y=[u'mean_68.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_34.tmp_0']} = square(inputs={X=[u'elementwise_sub_34.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_69.tmp_0']} = reduce_mean(inputs={X=[u'square_34.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_87']} = scale(inputs={ScaleTensor=[], X=[u'mean_69.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_34.tmp_0']} = rsqrt(inputs={X=[u'tmp_87']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_68.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_34.tmp_0'], Y=[u'rsqrt_34.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_69.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_68.tmp_0'], Y=[u'encoder_layer_16_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_34.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_69.tmp_0'], Y=[u'encoder_layer_16_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_102.tmp_0']} = mul(inputs={X=[u'elementwise_add_34.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_102.tmp_1']} = elementwise_add(inputs={X=[u'fc_102.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_103.tmp_0']} = mul(inputs={X=[u'elementwise_add_34.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_103.tmp_1']} = elementwise_add(inputs={X=[u'fc_103.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_104.tmp_0']} = mul(inputs={X=[u'elementwise_add_34.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_104.tmp_1']} = elementwise_add(inputs={X=[u'fc_104.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_102.tmp_1'], XShape=[u'reshape2_68.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_102.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_68.tmp_0'], XShape=[u'transpose_68.tmp_1']} = transpose2(inputs={X=[u'fc_102.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_103.tmp_1'], XShape=[u'reshape2_69.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_103.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_69.tmp_0'], XShape=[u'transpose_69.tmp_1']} = transpose2(inputs={X=[u'fc_103.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_104.tmp_1'], XShape=[u'reshape2_70.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_104.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_70.tmp_0'], XShape=[u'transpose_70.tmp_1']} = transpose2(inputs={X=[u'fc_104.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_18.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_68.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_35.tmp_0']} = matmul(inputs={X=[u'scale_18.tmp_0'], Y=[u'transpose_69.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_88']} = elementwise_add(inputs={X=[u'matmul_35.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_17.tmp_0']} = softmax(inputs={X=[u'tmp_88']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_52.tmp_1'], Out=[u'dropout_52.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_17.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_36.tmp_0']} = matmul(inputs={X=[u'dropout_52.tmp_0'], Y=[u'transpose_70.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_71.tmp_0'], XShape=[u'transpose_71.tmp_1']} = transpose2(inputs={X=[u'matmul_36.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_71.tmp_0'], XShape=[u'reshape2_71.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_71.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_105.tmp_0']} = mul(inputs={X=[u'transpose_71.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_105.tmp_1']} = elementwise_add(inputs={X=[u'fc_105.tmp_0'], Y=[u'encoder_layer_17_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_53.tmp_1'], Out=[u'dropout_53.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_105.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_89']} = elementwise_add(inputs={X=[u'dropout_53.tmp_0'], Y=[u'elementwise_add_34.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_70.tmp_0']} = reduce_mean(inputs={X=[u'tmp_89']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_35.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_89'], Y=[u'mean_70.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_35.tmp_0']} = square(inputs={X=[u'elementwise_sub_35.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_71.tmp_0']} = reduce_mean(inputs={X=[u'square_35.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_90']} = scale(inputs={ScaleTensor=[], X=[u'mean_71.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_35.tmp_0']} = rsqrt(inputs={X=[u'tmp_90']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_70.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_35.tmp_0'], Y=[u'rsqrt_35.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_71.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_70.tmp_0'], Y=[u'encoder_layer_17_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_35.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_71.tmp_0'], Y=[u'encoder_layer_17_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_106.tmp_0']} = mul(inputs={X=[u'elementwise_add_35.tmp_0'], Y=[u'encoder_layer_17_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_106.tmp_1']} = elementwise_add(inputs={X=[u'fc_106.tmp_0'], Y=[u'encoder_layer_17_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_106.tmp_2']} = gelu(inputs={X=[u'fc_106.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_107.tmp_0']} = mul(inputs={X=[u'fc_106.tmp_2'], Y=[u'encoder_layer_17_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_107.tmp_1']} = elementwise_add(inputs={X=[u'fc_107.tmp_0'], Y=[u'encoder_layer_17_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_54.tmp_1'], Out=[u'dropout_54.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_107.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_91']} = elementwise_add(inputs={X=[u'dropout_54.tmp_0'], Y=[u'elementwise_add_35.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_72.tmp_0']} = reduce_mean(inputs={X=[u'tmp_91']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_36.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_91'], Y=[u'mean_72.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_36.tmp_0']} = square(inputs={X=[u'elementwise_sub_36.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_73.tmp_0']} = reduce_mean(inputs={X=[u'square_36.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_92']} = scale(inputs={ScaleTensor=[], X=[u'mean_73.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_36.tmp_0']} = rsqrt(inputs={X=[u'tmp_92']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_72.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_36.tmp_0'], Y=[u'rsqrt_36.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_73.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_72.tmp_0'], Y=[u'encoder_layer_17_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_36.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_73.tmp_0'], Y=[u'encoder_layer_17_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_108.tmp_0']} = mul(inputs={X=[u'elementwise_add_36.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_108.tmp_1']} = elementwise_add(inputs={X=[u'fc_108.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_109.tmp_0']} = mul(inputs={X=[u'elementwise_add_36.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_109.tmp_1']} = elementwise_add(inputs={X=[u'fc_109.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_110.tmp_0']} = mul(inputs={X=[u'elementwise_add_36.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_110.tmp_1']} = elementwise_add(inputs={X=[u'fc_110.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_108.tmp_1'], XShape=[u'reshape2_72.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_108.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_72.tmp_0'], XShape=[u'transpose_72.tmp_1']} = transpose2(inputs={X=[u'fc_108.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_109.tmp_1'], XShape=[u'reshape2_73.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_109.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_73.tmp_0'], XShape=[u'transpose_73.tmp_1']} = transpose2(inputs={X=[u'fc_109.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_110.tmp_1'], XShape=[u'reshape2_74.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_110.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_74.tmp_0'], XShape=[u'transpose_74.tmp_1']} = transpose2(inputs={X=[u'fc_110.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_19.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_72.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_37.tmp_0']} = matmul(inputs={X=[u'scale_19.tmp_0'], Y=[u'transpose_73.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_93']} = elementwise_add(inputs={X=[u'matmul_37.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_18.tmp_0']} = softmax(inputs={X=[u'tmp_93']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_55.tmp_1'], Out=[u'dropout_55.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_18.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_38.tmp_0']} = matmul(inputs={X=[u'dropout_55.tmp_0'], Y=[u'transpose_74.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_75.tmp_0'], XShape=[u'transpose_75.tmp_1']} = transpose2(inputs={X=[u'matmul_38.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_75.tmp_0'], XShape=[u'reshape2_75.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_75.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_111.tmp_0']} = mul(inputs={X=[u'transpose_75.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_111.tmp_1']} = elementwise_add(inputs={X=[u'fc_111.tmp_0'], Y=[u'encoder_layer_18_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_56.tmp_1'], Out=[u'dropout_56.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_111.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_94']} = elementwise_add(inputs={X=[u'dropout_56.tmp_0'], Y=[u'elementwise_add_36.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_74.tmp_0']} = reduce_mean(inputs={X=[u'tmp_94']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_37.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_94'], Y=[u'mean_74.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_37.tmp_0']} = square(inputs={X=[u'elementwise_sub_37.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_75.tmp_0']} = reduce_mean(inputs={X=[u'square_37.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_95']} = scale(inputs={ScaleTensor=[], X=[u'mean_75.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_37.tmp_0']} = rsqrt(inputs={X=[u'tmp_95']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_74.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_37.tmp_0'], Y=[u'rsqrt_37.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_75.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_74.tmp_0'], Y=[u'encoder_layer_18_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_37.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_75.tmp_0'], Y=[u'encoder_layer_18_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_112.tmp_0']} = mul(inputs={X=[u'elementwise_add_37.tmp_0'], Y=[u'encoder_layer_18_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_112.tmp_1']} = elementwise_add(inputs={X=[u'fc_112.tmp_0'], Y=[u'encoder_layer_18_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_112.tmp_2']} = gelu(inputs={X=[u'fc_112.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_113.tmp_0']} = mul(inputs={X=[u'fc_112.tmp_2'], Y=[u'encoder_layer_18_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_113.tmp_1']} = elementwise_add(inputs={X=[u'fc_113.tmp_0'], Y=[u'encoder_layer_18_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_57.tmp_1'], Out=[u'dropout_57.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_113.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_96']} = elementwise_add(inputs={X=[u'dropout_57.tmp_0'], Y=[u'elementwise_add_37.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_76.tmp_0']} = reduce_mean(inputs={X=[u'tmp_96']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_38.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_96'], Y=[u'mean_76.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_38.tmp_0']} = square(inputs={X=[u'elementwise_sub_38.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_77.tmp_0']} = reduce_mean(inputs={X=[u'square_38.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_97']} = scale(inputs={ScaleTensor=[], X=[u'mean_77.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_38.tmp_0']} = rsqrt(inputs={X=[u'tmp_97']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_76.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_38.tmp_0'], Y=[u'rsqrt_38.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_77.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_76.tmp_0'], Y=[u'encoder_layer_18_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_38.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_77.tmp_0'], Y=[u'encoder_layer_18_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_114.tmp_0']} = mul(inputs={X=[u'elementwise_add_38.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_114.tmp_1']} = elementwise_add(inputs={X=[u'fc_114.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_115.tmp_0']} = mul(inputs={X=[u'elementwise_add_38.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_115.tmp_1']} = elementwise_add(inputs={X=[u'fc_115.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_116.tmp_0']} = mul(inputs={X=[u'elementwise_add_38.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_116.tmp_1']} = elementwise_add(inputs={X=[u'fc_116.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_114.tmp_1'], XShape=[u'reshape2_76.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_114.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_76.tmp_0'], XShape=[u'transpose_76.tmp_1']} = transpose2(inputs={X=[u'fc_114.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_115.tmp_1'], XShape=[u'reshape2_77.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_115.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_77.tmp_0'], XShape=[u'transpose_77.tmp_1']} = transpose2(inputs={X=[u'fc_115.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_116.tmp_1'], XShape=[u'reshape2_78.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_116.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_78.tmp_0'], XShape=[u'transpose_78.tmp_1']} = transpose2(inputs={X=[u'fc_116.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_20.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_76.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_39.tmp_0']} = matmul(inputs={X=[u'scale_20.tmp_0'], Y=[u'transpose_77.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_98']} = elementwise_add(inputs={X=[u'matmul_39.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_19.tmp_0']} = softmax(inputs={X=[u'tmp_98']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_58.tmp_1'], Out=[u'dropout_58.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_19.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_40.tmp_0']} = matmul(inputs={X=[u'dropout_58.tmp_0'], Y=[u'transpose_78.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_79.tmp_0'], XShape=[u'transpose_79.tmp_1']} = transpose2(inputs={X=[u'matmul_40.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_79.tmp_0'], XShape=[u'reshape2_79.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_79.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_117.tmp_0']} = mul(inputs={X=[u'transpose_79.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_117.tmp_1']} = elementwise_add(inputs={X=[u'fc_117.tmp_0'], Y=[u'encoder_layer_19_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_59.tmp_1'], Out=[u'dropout_59.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_117.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_99']} = elementwise_add(inputs={X=[u'dropout_59.tmp_0'], Y=[u'elementwise_add_38.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_78.tmp_0']} = reduce_mean(inputs={X=[u'tmp_99']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_39.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_99'], Y=[u'mean_78.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_39.tmp_0']} = square(inputs={X=[u'elementwise_sub_39.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_79.tmp_0']} = reduce_mean(inputs={X=[u'square_39.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_100']} = scale(inputs={ScaleTensor=[], X=[u'mean_79.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_39.tmp_0']} = rsqrt(inputs={X=[u'tmp_100']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_78.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_39.tmp_0'], Y=[u'rsqrt_39.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_79.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_78.tmp_0'], Y=[u'encoder_layer_19_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_39.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_79.tmp_0'], Y=[u'encoder_layer_19_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_118.tmp_0']} = mul(inputs={X=[u'elementwise_add_39.tmp_0'], Y=[u'encoder_layer_19_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_118.tmp_1']} = elementwise_add(inputs={X=[u'fc_118.tmp_0'], Y=[u'encoder_layer_19_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_118.tmp_2']} = gelu(inputs={X=[u'fc_118.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_119.tmp_0']} = mul(inputs={X=[u'fc_118.tmp_2'], Y=[u'encoder_layer_19_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_119.tmp_1']} = elementwise_add(inputs={X=[u'fc_119.tmp_0'], Y=[u'encoder_layer_19_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_60.tmp_1'], Out=[u'dropout_60.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_119.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_101']} = elementwise_add(inputs={X=[u'dropout_60.tmp_0'], Y=[u'elementwise_add_39.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_80.tmp_0']} = reduce_mean(inputs={X=[u'tmp_101']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_40.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_101'], Y=[u'mean_80.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_40.tmp_0']} = square(inputs={X=[u'elementwise_sub_40.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_81.tmp_0']} = reduce_mean(inputs={X=[u'square_40.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_102']} = scale(inputs={ScaleTensor=[], X=[u'mean_81.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_40.tmp_0']} = rsqrt(inputs={X=[u'tmp_102']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_80.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_40.tmp_0'], Y=[u'rsqrt_40.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_81.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_80.tmp_0'], Y=[u'encoder_layer_19_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_40.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_81.tmp_0'], Y=[u'encoder_layer_19_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_120.tmp_0']} = mul(inputs={X=[u'elementwise_add_40.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_120.tmp_1']} = elementwise_add(inputs={X=[u'fc_120.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_121.tmp_0']} = mul(inputs={X=[u'elementwise_add_40.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_121.tmp_1']} = elementwise_add(inputs={X=[u'fc_121.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_122.tmp_0']} = mul(inputs={X=[u'elementwise_add_40.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_122.tmp_1']} = elementwise_add(inputs={X=[u'fc_122.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_120.tmp_1'], XShape=[u'reshape2_80.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_120.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_80.tmp_0'], XShape=[u'transpose_80.tmp_1']} = transpose2(inputs={X=[u'fc_120.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_121.tmp_1'], XShape=[u'reshape2_81.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_121.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_81.tmp_0'], XShape=[u'transpose_81.tmp_1']} = transpose2(inputs={X=[u'fc_121.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_122.tmp_1'], XShape=[u'reshape2_82.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_122.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_82.tmp_0'], XShape=[u'transpose_82.tmp_1']} = transpose2(inputs={X=[u'fc_122.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_21.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_80.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_41.tmp_0']} = matmul(inputs={X=[u'scale_21.tmp_0'], Y=[u'transpose_81.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_103']} = elementwise_add(inputs={X=[u'matmul_41.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_20.tmp_0']} = softmax(inputs={X=[u'tmp_103']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_61.tmp_1'], Out=[u'dropout_61.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_20.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_42.tmp_0']} = matmul(inputs={X=[u'dropout_61.tmp_0'], Y=[u'transpose_82.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_83.tmp_0'], XShape=[u'transpose_83.tmp_1']} = transpose2(inputs={X=[u'matmul_42.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_83.tmp_0'], XShape=[u'reshape2_83.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_83.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_123.tmp_0']} = mul(inputs={X=[u'transpose_83.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_123.tmp_1']} = elementwise_add(inputs={X=[u'fc_123.tmp_0'], Y=[u'encoder_layer_20_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_62.tmp_1'], Out=[u'dropout_62.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_123.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_104']} = elementwise_add(inputs={X=[u'dropout_62.tmp_0'], Y=[u'elementwise_add_40.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_82.tmp_0']} = reduce_mean(inputs={X=[u'tmp_104']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_41.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_104'], Y=[u'mean_82.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_41.tmp_0']} = square(inputs={X=[u'elementwise_sub_41.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_83.tmp_0']} = reduce_mean(inputs={X=[u'square_41.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_105']} = scale(inputs={ScaleTensor=[], X=[u'mean_83.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_41.tmp_0']} = rsqrt(inputs={X=[u'tmp_105']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_82.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_41.tmp_0'], Y=[u'rsqrt_41.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_83.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_82.tmp_0'], Y=[u'encoder_layer_20_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_41.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_83.tmp_0'], Y=[u'encoder_layer_20_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_124.tmp_0']} = mul(inputs={X=[u'elementwise_add_41.tmp_0'], Y=[u'encoder_layer_20_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_124.tmp_1']} = elementwise_add(inputs={X=[u'fc_124.tmp_0'], Y=[u'encoder_layer_20_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_124.tmp_2']} = gelu(inputs={X=[u'fc_124.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_125.tmp_0']} = mul(inputs={X=[u'fc_124.tmp_2'], Y=[u'encoder_layer_20_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_125.tmp_1']} = elementwise_add(inputs={X=[u'fc_125.tmp_0'], Y=[u'encoder_layer_20_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_63.tmp_1'], Out=[u'dropout_63.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_125.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_106']} = elementwise_add(inputs={X=[u'dropout_63.tmp_0'], Y=[u'elementwise_add_41.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_84.tmp_0']} = reduce_mean(inputs={X=[u'tmp_106']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_42.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_106'], Y=[u'mean_84.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_42.tmp_0']} = square(inputs={X=[u'elementwise_sub_42.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_85.tmp_0']} = reduce_mean(inputs={X=[u'square_42.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_107']} = scale(inputs={ScaleTensor=[], X=[u'mean_85.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_42.tmp_0']} = rsqrt(inputs={X=[u'tmp_107']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_84.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_42.tmp_0'], Y=[u'rsqrt_42.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_85.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_84.tmp_0'], Y=[u'encoder_layer_20_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_42.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_85.tmp_0'], Y=[u'encoder_layer_20_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_126.tmp_0']} = mul(inputs={X=[u'elementwise_add_42.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_126.tmp_1']} = elementwise_add(inputs={X=[u'fc_126.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_127.tmp_0']} = mul(inputs={X=[u'elementwise_add_42.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_127.tmp_1']} = elementwise_add(inputs={X=[u'fc_127.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_128.tmp_0']} = mul(inputs={X=[u'elementwise_add_42.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_128.tmp_1']} = elementwise_add(inputs={X=[u'fc_128.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_126.tmp_1'], XShape=[u'reshape2_84.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_126.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_84.tmp_0'], XShape=[u'transpose_84.tmp_1']} = transpose2(inputs={X=[u'fc_126.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_127.tmp_1'], XShape=[u'reshape2_85.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_127.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_85.tmp_0'], XShape=[u'transpose_85.tmp_1']} = transpose2(inputs={X=[u'fc_127.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_128.tmp_1'], XShape=[u'reshape2_86.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_128.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_86.tmp_0'], XShape=[u'transpose_86.tmp_1']} = transpose2(inputs={X=[u'fc_128.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_22.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_84.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_43.tmp_0']} = matmul(inputs={X=[u'scale_22.tmp_0'], Y=[u'transpose_85.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_108']} = elementwise_add(inputs={X=[u'matmul_43.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_21.tmp_0']} = softmax(inputs={X=[u'tmp_108']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_64.tmp_1'], Out=[u'dropout_64.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_21.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_44.tmp_0']} = matmul(inputs={X=[u'dropout_64.tmp_0'], Y=[u'transpose_86.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_87.tmp_0'], XShape=[u'transpose_87.tmp_1']} = transpose2(inputs={X=[u'matmul_44.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_87.tmp_0'], XShape=[u'reshape2_87.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_87.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_129.tmp_0']} = mul(inputs={X=[u'transpose_87.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_129.tmp_1']} = elementwise_add(inputs={X=[u'fc_129.tmp_0'], Y=[u'encoder_layer_21_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_65.tmp_1'], Out=[u'dropout_65.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_129.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_109']} = elementwise_add(inputs={X=[u'dropout_65.tmp_0'], Y=[u'elementwise_add_42.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_86.tmp_0']} = reduce_mean(inputs={X=[u'tmp_109']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_43.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_109'], Y=[u'mean_86.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_43.tmp_0']} = square(inputs={X=[u'elementwise_sub_43.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_87.tmp_0']} = reduce_mean(inputs={X=[u'square_43.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_110']} = scale(inputs={ScaleTensor=[], X=[u'mean_87.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_43.tmp_0']} = rsqrt(inputs={X=[u'tmp_110']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_86.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_43.tmp_0'], Y=[u'rsqrt_43.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_87.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_86.tmp_0'], Y=[u'encoder_layer_21_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_43.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_87.tmp_0'], Y=[u'encoder_layer_21_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_130.tmp_0']} = mul(inputs={X=[u'elementwise_add_43.tmp_0'], Y=[u'encoder_layer_21_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_130.tmp_1']} = elementwise_add(inputs={X=[u'fc_130.tmp_0'], Y=[u'encoder_layer_21_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_130.tmp_2']} = gelu(inputs={X=[u'fc_130.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_131.tmp_0']} = mul(inputs={X=[u'fc_130.tmp_2'], Y=[u'encoder_layer_21_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_131.tmp_1']} = elementwise_add(inputs={X=[u'fc_131.tmp_0'], Y=[u'encoder_layer_21_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_66.tmp_1'], Out=[u'dropout_66.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_131.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_111']} = elementwise_add(inputs={X=[u'dropout_66.tmp_0'], Y=[u'elementwise_add_43.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_88.tmp_0']} = reduce_mean(inputs={X=[u'tmp_111']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_44.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_111'], Y=[u'mean_88.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_44.tmp_0']} = square(inputs={X=[u'elementwise_sub_44.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_89.tmp_0']} = reduce_mean(inputs={X=[u'square_44.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_112']} = scale(inputs={ScaleTensor=[], X=[u'mean_89.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_44.tmp_0']} = rsqrt(inputs={X=[u'tmp_112']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_88.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_44.tmp_0'], Y=[u'rsqrt_44.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_89.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_88.tmp_0'], Y=[u'encoder_layer_21_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_44.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_89.tmp_0'], Y=[u'encoder_layer_21_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_132.tmp_0']} = mul(inputs={X=[u'elementwise_add_44.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_132.tmp_1']} = elementwise_add(inputs={X=[u'fc_132.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_133.tmp_0']} = mul(inputs={X=[u'elementwise_add_44.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_133.tmp_1']} = elementwise_add(inputs={X=[u'fc_133.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_134.tmp_0']} = mul(inputs={X=[u'elementwise_add_44.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_134.tmp_1']} = elementwise_add(inputs={X=[u'fc_134.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_132.tmp_1'], XShape=[u'reshape2_88.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_132.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_88.tmp_0'], XShape=[u'transpose_88.tmp_1']} = transpose2(inputs={X=[u'fc_132.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_133.tmp_1'], XShape=[u'reshape2_89.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_133.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_89.tmp_0'], XShape=[u'transpose_89.tmp_1']} = transpose2(inputs={X=[u'fc_133.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_134.tmp_1'], XShape=[u'reshape2_90.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_134.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_90.tmp_0'], XShape=[u'transpose_90.tmp_1']} = transpose2(inputs={X=[u'fc_134.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_23.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_88.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_45.tmp_0']} = matmul(inputs={X=[u'scale_23.tmp_0'], Y=[u'transpose_89.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_113']} = elementwise_add(inputs={X=[u'matmul_45.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_22.tmp_0']} = softmax(inputs={X=[u'tmp_113']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_67.tmp_1'], Out=[u'dropout_67.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_22.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_46.tmp_0']} = matmul(inputs={X=[u'dropout_67.tmp_0'], Y=[u'transpose_90.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_91.tmp_0'], XShape=[u'transpose_91.tmp_1']} = transpose2(inputs={X=[u'matmul_46.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_91.tmp_0'], XShape=[u'reshape2_91.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_91.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_135.tmp_0']} = mul(inputs={X=[u'transpose_91.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_135.tmp_1']} = elementwise_add(inputs={X=[u'fc_135.tmp_0'], Y=[u'encoder_layer_22_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_68.tmp_1'], Out=[u'dropout_68.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_135.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_114']} = elementwise_add(inputs={X=[u'dropout_68.tmp_0'], Y=[u'elementwise_add_44.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_90.tmp_0']} = reduce_mean(inputs={X=[u'tmp_114']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_45.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_114'], Y=[u'mean_90.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_45.tmp_0']} = square(inputs={X=[u'elementwise_sub_45.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_91.tmp_0']} = reduce_mean(inputs={X=[u'square_45.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_115']} = scale(inputs={ScaleTensor=[], X=[u'mean_91.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_45.tmp_0']} = rsqrt(inputs={X=[u'tmp_115']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_90.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_45.tmp_0'], Y=[u'rsqrt_45.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_91.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_90.tmp_0'], Y=[u'encoder_layer_22_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_45.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_91.tmp_0'], Y=[u'encoder_layer_22_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_136.tmp_0']} = mul(inputs={X=[u'elementwise_add_45.tmp_0'], Y=[u'encoder_layer_22_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_136.tmp_1']} = elementwise_add(inputs={X=[u'fc_136.tmp_0'], Y=[u'encoder_layer_22_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_136.tmp_2']} = gelu(inputs={X=[u'fc_136.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_137.tmp_0']} = mul(inputs={X=[u'fc_136.tmp_2'], Y=[u'encoder_layer_22_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_137.tmp_1']} = elementwise_add(inputs={X=[u'fc_137.tmp_0'], Y=[u'encoder_layer_22_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_69.tmp_1'], Out=[u'dropout_69.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_137.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_116']} = elementwise_add(inputs={X=[u'dropout_69.tmp_0'], Y=[u'elementwise_add_45.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_92.tmp_0']} = reduce_mean(inputs={X=[u'tmp_116']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_46.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_116'], Y=[u'mean_92.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_46.tmp_0']} = square(inputs={X=[u'elementwise_sub_46.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_93.tmp_0']} = reduce_mean(inputs={X=[u'square_46.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_117']} = scale(inputs={ScaleTensor=[], X=[u'mean_93.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_46.tmp_0']} = rsqrt(inputs={X=[u'tmp_117']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_92.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_46.tmp_0'], Y=[u'rsqrt_46.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_93.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_92.tmp_0'], Y=[u'encoder_layer_22_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_46.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_93.tmp_0'], Y=[u'encoder_layer_22_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_138.tmp_0']} = mul(inputs={X=[u'elementwise_add_46.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_query_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_138.tmp_1']} = elementwise_add(inputs={X=[u'fc_138.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_query_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_139.tmp_0']} = mul(inputs={X=[u'elementwise_add_46.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_key_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_139.tmp_1']} = elementwise_add(inputs={X=[u'fc_139.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_key_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_140.tmp_0']} = mul(inputs={X=[u'elementwise_add_46.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_value_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_140.tmp_1']} = elementwise_add(inputs={X=[u'fc_140.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_value_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_138.tmp_1'], XShape=[u'reshape2_92.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_138.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_92.tmp_0'], XShape=[u'transpose_92.tmp_1']} = transpose2(inputs={X=[u'fc_138.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_139.tmp_1'], XShape=[u'reshape2_93.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_139.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_93.tmp_0'], XShape=[u'transpose_93.tmp_1']} = transpose2(inputs={X=[u'fc_139.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'fc_140.tmp_1'], XShape=[u'reshape2_94.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_140.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 16L, 64L], use_quantizer = False)
    {Out=[u'transpose_94.tmp_0'], XShape=[u'transpose_94.tmp_1']} = transpose2(inputs={X=[u'fc_140.tmp_1']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'scale_24.tmp_0']} = scale(inputs={ScaleTensor=[], X=[u'transpose_92.tmp_0']}, bias = 0.0, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 0.125)
    {Out=[u'matmul_47.tmp_0']} = matmul(inputs={X=[u'scale_24.tmp_0'], Y=[u'transpose_93.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_118']} = elementwise_add(inputs={X=[u'matmul_47.tmp_0'], Y=[u'stack_0.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'softmax_23.tmp_0']} = softmax(inputs={X=[u'tmp_118']}, axis = -1, data_format = AnyLayout, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = True, use_mkldnn = False)
    {Mask=[u'dropout_70.tmp_1'], Out=[u'dropout_70.tmp_0']} = dropout(inputs={Seed=[], X=[u'softmax_23.tmp_0']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'matmul_48.tmp_0']} = matmul(inputs={X=[u'dropout_70.tmp_0'], Y=[u'transpose_94.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = False, use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_95.tmp_0'], XShape=[u'transpose_95.tmp_1']} = transpose2(inputs={X=[u'matmul_48.tmp_0']}, axis = [0L, 2L, 1L, 3L], data_format = AnyLayout, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False)
    {Out=[u'transpose_95.tmp_0'], XShape=[u'reshape2_95.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'transpose_95.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [0L, 0L, 1024L], use_quantizer = False)
    {Out=[u'fc_141.tmp_0']} = mul(inputs={X=[u'transpose_95.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_output_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_141.tmp_1']} = elementwise_add(inputs={X=[u'fc_141.tmp_0'], Y=[u'encoder_layer_23_multi_head_att_output_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_71.tmp_1'], Out=[u'dropout_71.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_141.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_119']} = elementwise_add(inputs={X=[u'dropout_71.tmp_0'], Y=[u'elementwise_add_46.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_94.tmp_0']} = reduce_mean(inputs={X=[u'tmp_119']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_47.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_119'], Y=[u'mean_94.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_47.tmp_0']} = square(inputs={X=[u'elementwise_sub_47.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_95.tmp_0']} = reduce_mean(inputs={X=[u'square_47.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_120']} = scale(inputs={ScaleTensor=[], X=[u'mean_95.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_47.tmp_0']} = rsqrt(inputs={X=[u'tmp_120']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_94.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_47.tmp_0'], Y=[u'rsqrt_47.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_95.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_94.tmp_0'], Y=[u'encoder_layer_23_post_att_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_47.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_95.tmp_0'], Y=[u'encoder_layer_23_post_att_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_142.tmp_0']} = mul(inputs={X=[u'elementwise_add_47.tmp_0'], Y=[u'encoder_layer_23_ffn_fc_0.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_142.tmp_1']} = elementwise_add(inputs={X=[u'fc_142.tmp_0'], Y=[u'encoder_layer_23_ffn_fc_0.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_142.tmp_2']} = gelu(inputs={X=[u'fc_142.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'fc_143.tmp_0']} = mul(inputs={X=[u'fc_142.tmp_2'], Y=[u'encoder_layer_23_ffn_fc_1.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_143.tmp_1']} = elementwise_add(inputs={X=[u'fc_143.tmp_0'], Y=[u'encoder_layer_23_ffn_fc_1.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Mask=[u'dropout_72.tmp_1'], Out=[u'dropout_72.tmp_0']} = dropout(inputs={Seed=[], X=[u'fc_143.tmp_1']}, dropout_implementation = upscale_in_train, dropout_prob = 0.10000000149, fix_seed = False, is_test = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], seed = 0)
    {Out=[u'tmp_121']} = elementwise_add(inputs={X=[u'dropout_72.tmp_0'], Y=[u'elementwise_add_47.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'mean_96.tmp_0']} = reduce_mean(inputs={X=[u'tmp_121']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_48.tmp_0']} = elementwise_sub(inputs={X=[u'tmp_121'], Y=[u'mean_96.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_48.tmp_0']} = square(inputs={X=[u'elementwise_sub_48.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_97.tmp_0']} = reduce_mean(inputs={X=[u'square_48.tmp_0']}, dim = [2L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_122']} = scale(inputs={ScaleTensor=[], X=[u'mean_97.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_48.tmp_0']} = rsqrt(inputs={X=[u'tmp_122']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_96.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_48.tmp_0'], Y=[u'rsqrt_48.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_97.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_96.tmp_0'], Y=[u'encoder_layer_23_post_ffn_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_48.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_97.tmp_0'], Y=[u'encoder_layer_23_post_ffn_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'cast_0.tmp_0']} = cast(inputs={X=[u'mask_pos']}, in_dtype = 3, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = 2)
    {Out=[u'slice_0.tmp_0']} = slice(inputs={EndsTensor=[], EndsTensorList=[], Input=[u'elementwise_add_48.tmp_0'], StartsTensor=[], StartsTensorList=[]}, axes = [1L], decrease_axis = [], ends = [1L], infer_flags = [1L], op_device = , op_namescope = /, op_role = 0, op_role_var = [], starts = [0L])
    {Out=[u'fc_144.tmp_0']} = mul(inputs={X=[u'slice_0.tmp_0'], Y=[u'pooled_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_144.tmp_1']} = elementwise_add(inputs={X=[u'fc_144.tmp_0'], Y=[u'pooled_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_144.tmp_2']} = tanh(inputs={X=[u'fc_144.tmp_1']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'reshape2_96.tmp_0'], XShape=[u'reshape2_96.tmp_1']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'elementwise_add_48.tmp_0']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [-1L, 1024L], use_quantizer = False)
    {Out=[u'gather_0.tmp_0']} = gather(inputs={Axis=[], Index=[u'cast_0.tmp_0'], X=[u'reshape2_96.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], overwrite = True)
    {Out=[u'fc_145.tmp_0']} = mul(inputs={X=[u'gather_0.tmp_0'], Y=[u'mask_lm_trans_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 1, y_num_col_dims = 1)
    {Out=[u'fc_145.tmp_1']} = elementwise_add(inputs={X=[u'fc_145.tmp_0'], Y=[u'mask_lm_trans_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_145.tmp_2']} = gelu(inputs={X=[u'fc_145.tmp_1']}, approximate = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_98.tmp_0']} = reduce_mean(inputs={X=[u'fc_145.tmp_2']}, dim = [1L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'elementwise_sub_49.tmp_0']} = elementwise_sub(inputs={X=[u'fc_145.tmp_2'], Y=[u'mean_98.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'square_49.tmp_0']} = square(inputs={X=[u'elementwise_sub_49.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'mean_99.tmp_0']} = reduce_mean(inputs={X=[u'square_49.tmp_0']}, dim = [1L], in_dtype = -1, keep_dim = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], out_dtype = -1, reduce_all = False)
    {Out=[u'tmp_123']} = scale(inputs={ScaleTensor=[], X=[u'mean_99.tmp_0']}, bias = 9.99999997475e-07, bias_after_scale = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale = 1.0)
    {Out=[u'rsqrt_49.tmp_0']} = rsqrt(inputs={X=[u'tmp_123']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_cudnn = False, use_mkldnn = False)
    {Out=[u'elementwise_mul_98.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_sub_49.tmp_0'], Y=[u'rsqrt_49.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 0, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_mul_99.tmp_0']} = elementwise_mul(inputs={X=[u'elementwise_mul_98.tmp_0'], Y=[u'mask_lm_trans_layer_norm_scale']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'elementwise_add_49.tmp_0']} = elementwise_add(inputs={X=[u'elementwise_mul_99.tmp_0'], Y=[u'mask_lm_trans_layer_norm_bias']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'matmul_49.tmp_0']} = matmul(inputs={X=[u'elementwise_add_49.tmp_0'], Y=[u'word_embedding']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, alpha = 1.0, force_fp32_output = False, fused_reshape_Out = [], fused_reshape_X = [], fused_reshape_Y = [], fused_transpose_Out = [], fused_transpose_X = [], fused_transpose_Y = [], mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], transpose_X = False, transpose_Y = True, use_mkldnn = False, use_quantizer = False)
    {Out=[u'tmp_124']} = elementwise_add(inputs={X=[u'matmul_49.tmp_0'], Y=[u'mask_lm_out_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Loss=[u'softmax_with_cross_entropy_0.tmp_1'], Softmax=[u'softmax_with_cross_entropy_0.tmp_0']} = softmax_with_cross_entropy(inputs={Label=[u'mask_label'], Logits=[u'tmp_124']}, axis = -1, ignore_index = -100, numeric_stable_mode = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], soft_label = False)
    {Out=[u'mean_100.tmp_0']} = mean(inputs={X=[u'softmax_with_cross_entropy_0.tmp_1']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [])
    {Out=[u'fc_146.tmp_0']} = mul(inputs={X=[u'fc_144.tmp_2'], Y=[u'next_sent_fc.w_0']}, force_fp32_output = False, op_device = , op_namescope = /, op_role = 0, op_role_var = [], scale_out = 1.0, scale_x = 1.0, scale_y = [1.0], use_mkldnn = False, x_num_col_dims = 2, y_num_col_dims = 1)
    {Out=[u'fc_146.tmp_1']} = elementwise_add(inputs={X=[u'fc_146.tmp_0'], Y=[u'next_sent_fc.b_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = 2, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
    {Out=[u'fc_146.tmp_1'], XShape=[u'reshape2_97.tmp_0']} = reshape2(inputs={Shape=[], ShapeTensor=[], X=[u'fc_146.tmp_1']}, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], shape = [-1L, 2L], use_quantizer = False)
    {Loss=[u'softmax_with_cross_entropy_1.tmp_1'], Softmax=[u'softmax_with_cross_entropy_1.tmp_0']} = softmax_with_cross_entropy(inputs={Label=[u'labels'], Logits=[u'fc_146.tmp_1']}, axis = -1, ignore_index = -100, numeric_stable_mode = True, op_device = , op_namescope = /, op_role = 0, op_role_var = [], soft_label = False)
    {Indices=[u'top_k_0.tmp_1'], Out=[u'top_k_0.tmp_0']} = top_k(inputs={K=[], X=[u'softmax_with_cross_entropy_1.tmp_0']}, k = 1, op_device = , op_namescope = /, op_role = 0, op_role_var = [])
    {Accuracy=[u'accuracy_0.tmp_0'], Correct=[u'accuracy_0.tmp_1'], Total=[u'accuracy_0.tmp_2']} = accuracy(inputs={Indices=[u'top_k_0.tmp_1'], Label=[u'labels'], Out=[u'top_k_0.tmp_0']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [])
    {Out=[u'mean_101.tmp_0']} = mean(inputs={X=[u'softmax_with_cross_entropy_1.tmp_1']}, op_device = , op_namescope = /, op_role = 0, op_role_var = [])
    {Out=[u'tmp_125']} = elementwise_add(inputs={X=[u'mean_101.tmp_0'], Y=[u'mean_100.tmp_0']}, Scale_out = 1.0, Scale_x = 1.0, Scale_y = 1.0, axis = -1, mkldnn_data_type = float32, op_device = , op_namescope = /, op_role = 0, op_role_var = [], use_mkldnn = False, use_quantizer = False, x_data_format = , y_data_format = )
}
